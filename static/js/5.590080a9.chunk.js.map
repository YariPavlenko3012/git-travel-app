{"version":3,"sources":["model/language.model.js","model/City/cabs.model.js","model/City/language.model.js","model/City/city.model.js","model/media.model.js","enums/PlaceType.js","model/Sight/language.model.js","model/Sight/sight.model.js","services/admin/sight.service.js","utils/PlaceTypeTranslate.js","enums/FoursquarePlaceType.js"],"names":["LanguageModel","data","this","id","name","lang_code","CabModel","trim","phone_number","CityLanguageModel","city_name","language","portraitImage","path","landscapeImage","CityModel","description","state","latitude","longitude","geometry","work_status","generation_count_of_squares","original_name","languages","map","images","image","MediaModel","population","landscape_image","portrait_image","cabs","cab","PlaceTypeEnum","reserve","botanical_garden","beach","mountains","sea","lake","restaurant","art_gallery","tourist_attraction","campground","church","mosque","museum","theater","park","place_of_view","customTypesList","googleTypesList","SightLanguageModel","sight_description","sight_name","SightModel","number_of_views","city","check_coordinates","need_review","place_type","opening_hours","formatted_address","website","international_phone_number","SightService","sightId","axios","get","API_MAKE_ADMIN_SIGHT_SHOW","params","API_ADMIN_SIGHT_LIST","paramsSerializer","QueryString","stringify","sightList","sight","post","API_ADMIN_SIGHT_CREATE","API_ADMIN_SIGHT_CREATE_BATCH","put","API_MAKE_ADMIN_SIGHT_UPDATE","delete","API_MAKE_ADMIN_SIGHT_DELETE","API_MAKE_ADMIN_SIGHT_TRANSLATE_CREATE","translateId","API_MAKE_ADMIN_SIGHT_TRANSLATE_EDIT","workStatus","API_MAKE_ADMIN_SIGHT_CHANGE_STATUS","API_MAKE_ADMIN_SIGHT_NEED_REVIEW","API_MAKE_ADMIN_SIGHT_GET_CITIES","PlaceTypeTranslate","type","FoursquarePlaceTypeEnum","mountain","building","castle","garden","historical_and_protected_object","monument","palace","square","art_museum","historical_museum","science_museum","opera_theatre","forest","national_park","natural_park"],"mappings":"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","file":"static/js/5.590080a9.chunk.js","sourcesContent":["export default class LanguageModel {\n    constructor(data = {}) {\n        this.id = data.id;\n        this.name = data.name;\n        this.lang_code = data.lang_code;\n    }\n}\n","export default class CabModel {\n    constructor(data = {}) {\n        this.id =  data.id;\n        this.name = (data.name || \"\").trim();\n        this.phone_number = (data.phone_number || \"\").trim();\n    }\n}\n","import LanguageModel from \"../language.model\";\n\nexport default class CityLanguageModel {\n    constructor(data = {}) {\n        this.city_name = data.city_name;\n        this.id = data.id;\n        this.language = new LanguageModel(data.language);\n    }\n}\n","import MediaModel from '../media.model'\nimport CabModel from \"./cabs.model\";\nimport CityLanguageModel from \"./language.model\";\n\nconst portraitImage = {\n    id: null,\n    path: \"https://images.unsplash.com/photo-1629809189194-8302d4345c8a?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8dWtyYWluZSUyMGZsYWd8ZW58MHx8MHx8&w=1000&q=80\"\n}\n\nconst landscapeImage = {\n    id: null,\n    path: \"https://media.istockphoto.com/photos/close-up-ukranian-flag-picture-id163641275?b=1&k=20&m=163641275&s=170667a&w=0&h=CVdqTfh31VTDbr7hqcBTbyocEZLlWTC02Kip6niMXBw=\"\n}\n\nexport default class CityModel {\n    constructor(data = {}) {\n        this.id = data.id;\n        this.name = data.name;\n        this.description = data.description;\n        this.state = data.state;\n        this.latitude = data.latitude;\n        this.longitude = data.longitude;\n        this.geometry = data.geometry;\n        this.work_status = data.work_status;\n        this.generation_count_of_squares = data.generation_count_of_squares;\n        this.original_name = data.original_name;\n        this.languages = (data.languages || []).map( language => new CityLanguageModel(language));\n        this.images = (data.images || []).map( image => new MediaModel(image));\n        this.population = data.population;\n        this.landscape_image =  new MediaModel(data.landscape_image || landscapeImage);\n        this.portrait_image =  new MediaModel(data.portrait_image || portraitImage)\n        this.cabs = (data.cabs || []).map( cab => new CabModel(cab));\n    }\n}\n","export default class MediaModel {\n    constructor(data = {}) {\n        this.id = data.id;\n        this.path = data.path;\n    }\n}\n","export default class PlaceTypeEnum{\n    static get reserve(){ return \"reserve\" }\n    static get botanical_garden(){ return \"botanical_garden\" }\n    static get beach(){ return \"beach\" }\n    static get mountains(){ return \"mountains\" }\n    static get sea(){ return \"sea\" }\n    static get lake(){ return \"lake\" }\n    static get restaurant(){ return \"restaurant\" }\n    static get art_gallery(){ return \"art_gallery\" }\n    static get tourist_attraction(){ return \"tourist_attraction\" }\n    static get campground(){ return \"campground\" }\n    static get church(){ return \"church\" }\n    static get mosque(){ return \"mosque\" }\n    static get museum(){ return \"museum\" }\n    static get theater(){ return \"theater\" }\n    static get park(){ return \"park\" }\n    static get place_of_view(){ return \"place_of_view\" }\n\n    static get googleTypesListManual(){\n        return [\n        ]\n    }\n    static get googleTypesListAutomatic(){\n        return [\n        ]\n    }\n    static get googleTypesList(){\n        return [\n        ]\n    }\n\n    static get customTypesList(){\n        return [\n            PlaceTypeEnum.reserve,\n            PlaceTypeEnum.botanical_garden,\n            PlaceTypeEnum.beach,\n            PlaceTypeEnum.mountains,\n            PlaceTypeEnum.sea,\n            PlaceTypeEnum.lake,\n            PlaceTypeEnum.restaurant,\n            PlaceTypeEnum.art_gallery,\n            PlaceTypeEnum.tourist_attraction,\n            PlaceTypeEnum.campground,\n            PlaceTypeEnum.church,\n            PlaceTypeEnum.mosque,\n            PlaceTypeEnum.museum,\n            PlaceTypeEnum.theater,\n            PlaceTypeEnum.park,\n            PlaceTypeEnum.place_of_view,\n        ]\n    }\n\n    static get list(){\n        return [\n            ...PlaceTypeEnum.customTypesList,\n            ...PlaceTypeEnum.googleTypesList,\n        ]\n    }\n}\n","import LanguageModel from \"../language.model\";\n\nexport default class SightLanguageModel {\n    constructor(data = {}) {\n        this.id = data.id;\n        this.language = new LanguageModel(data.language);\n        this.sight_description = data.sight_description;\n        this.sight_name = data.sight_name;\n    }\n};\n","import MediaModel from \"../media.model\";\nimport CityModel from \"../City/city.model\";\nimport SightLanguageModel from \"./language.model\";\n\nexport default class SightModel {\n    constructor(data = {}) {\n        this.id = data.id;\n        this.name = data.name;\n        this.description = data.description;\n        this.number_of_views = data.number_of_views || 0;\n        this.latitude = data.latitude;\n        this.longitude = data.longitude;\n        this.original_name = data.original_name;\n        this.city = data.city;\n        this.check_coordinates = data.check_coordinates;\n        this.need_review = data.need_review;\n        this.work_status = data.work_status;\n        this.place_type = data.place_type || [];\n        this.opening_hours = data.opening_hours || null;\n        this.formatted_address = data.formatted_address;\n        this.website = data.website;\n        this.international_phone_number = data.international_phone_number;\n        this.languages = (data.languages || []).map( language => new SightLanguageModel(language));\n        this.images = (data.images || []).map( image => new MediaModel(image));\n    }\n};\n","/**\n *service\n */\nimport axios from 'axios'\n/**\n * const\n */\nimport {\n    API_ADMIN_SIGHT_CREATE, API_ADMIN_SIGHT_CREATE_BATCH,\n    API_ADMIN_SIGHT_LIST,\n    API_MAKE_ADMIN_SIGHT_CHANGE_STATUS,\n    API_MAKE_ADMIN_SIGHT_DELETE,\n    API_MAKE_ADMIN_SIGHT_GET_CITIES,\n    API_MAKE_ADMIN_SIGHT_NEED_REVIEW,\n    API_MAKE_ADMIN_SIGHT_SHOW,\n    API_MAKE_ADMIN_SIGHT_TRANSLATE_CREATE,\n    API_MAKE_ADMIN_SIGHT_TRANSLATE_EDIT,\n    API_MAKE_ADMIN_SIGHT_UPDATE,\n} from \"../../constants/admin/api.constant\";\n/**\n * utils\n */\nimport {QueryString} from \"../../utils/Querystring\";\n/**\n * model\n */\nimport SightModel from \"../../model/Sight/sight.model\";\n\nexport default class SightService {\n    static async show(sightId) {\n        return new SightModel(await axios.get(API_MAKE_ADMIN_SIGHT_SHOW(sightId)));\n    }\n\n    static async list(params) {\n        let sightList = await axios.get(API_ADMIN_SIGHT_LIST, {\n            params,\n            paramsSerializer: params => {\n                return QueryString.stringify(params)\n            }\n        });\n\n\n        sightList.data = sightList.data.map(sight => new SightModel(sight))\n\n        return sightList;\n    }\n\n    static async create(data) {\n        return new SightModel(await axios.post(API_ADMIN_SIGHT_CREATE, data));\n    }\n\n    static async createBatch(data) {\n        return new SightModel(await axios.post(API_ADMIN_SIGHT_CREATE_BATCH, data));\n    }\n\n    static async update(sightId, data) {\n        return new SightModel(await axios.put(API_MAKE_ADMIN_SIGHT_UPDATE(sightId), data));\n    }\n\n    static async delete(sightId) {\n        return await axios.delete(API_MAKE_ADMIN_SIGHT_DELETE(sightId));\n    }\n\n    static async createTranslate(sightId, data) {\n        return await axios.post(API_MAKE_ADMIN_SIGHT_TRANSLATE_CREATE(sightId), data);\n    }\n\n    static async updateTranslate(sightId, translateId, data) {\n        return await axios.put(API_MAKE_ADMIN_SIGHT_TRANSLATE_EDIT(sightId, translateId), data);\n    }\n\n    static async updateWorkStatus(sightId, workStatus) {\n        return await axios.put(API_MAKE_ADMIN_SIGHT_CHANGE_STATUS(sightId), {work_status: workStatus});\n    }\n\n    static async needReview(sightId, data) {\n        return await axios.put(API_MAKE_ADMIN_SIGHT_NEED_REVIEW(sightId), data);\n    }\n\n    static async getCitiesBySight(sightId) {\n        return await axios.get(API_MAKE_ADMIN_SIGHT_GET_CITIES(sightId));\n    }\n}\n\n","import PlaceTypeEnum from \"../enums/PlaceType\";\nimport FoursquarePlaceTypeEnum from \"../enums/FoursquarePlaceType\";\n\nexport default class PlaceTypeTranslate {\n    static getTranslateForType( type ) {\n        const typeObj = {\n            [PlaceTypeEnum.reserve]: \"Заповідник\",\n            [PlaceTypeEnum.botanical_garden]: \"Ботанічний сад\",\n            [PlaceTypeEnum.beach]: \"Пляж\",\n            [PlaceTypeEnum.mountains]: \"Гори\",\n            [PlaceTypeEnum.sea]: \"Море\",\n            [PlaceTypeEnum.lake]: \"Озеро\",\n            [PlaceTypeEnum.art_gallery]: \"Картинна галерея\",\n            [PlaceTypeEnum.tourist_attraction]: \"Туристична пам'ятка\",\n            [PlaceTypeEnum.campground]: \"Кемпінг\",\n            [PlaceTypeEnum.church]: \"Церква\",\n            [PlaceTypeEnum.theater]: \"Театр\",\n            [PlaceTypeEnum.mosque]: \"Мечеть\",\n            [PlaceTypeEnum.museum]: \"Музей\",\n            [PlaceTypeEnum.park]: \"Парк\",\n            [PlaceTypeEnum.restaurant]: \"Ресторан\",\n            [PlaceTypeEnum.place_of_view]: \"Красивый вид\",\n        }\n\n        return typeObj[type] || `ERROR ${type}`\n    }\n\n    static getTranslateForFoursquareType( type ) {\n        const typeObj = {\n            [FoursquarePlaceTypeEnum.place_of_view]: \"Красивое место\",\n            [FoursquarePlaceTypeEnum.reserve]: \"Природный заповедник\",\n            [FoursquarePlaceTypeEnum.botanical_garden]: \"Батонический сад\",\n            [FoursquarePlaceTypeEnum.mountain]: \"Гора\",\n            [FoursquarePlaceTypeEnum.lake]: \"Озеро\",\n            [FoursquarePlaceTypeEnum.restaurant]: \"Ресторан\",\n            [FoursquarePlaceTypeEnum.art_gallery]: \"Арт галлерея\",\n            [FoursquarePlaceTypeEnum.building]: \"Здание и сооружение\",\n            [FoursquarePlaceTypeEnum.castle]: \"Замок\",\n            [FoursquarePlaceTypeEnum.garden]: \"Сад\",\n            [FoursquarePlaceTypeEnum.historical_and_protected_object]: \"Исторический объект и защещеные объекты\",\n            [FoursquarePlaceTypeEnum.monument]: \"Памятник\",\n            [FoursquarePlaceTypeEnum.palace]: \"Дворец\",\n            [FoursquarePlaceTypeEnum.square]: \"Площадь\",\n            [FoursquarePlaceTypeEnum.art_museum]: \"Музей искуств\",\n            [FoursquarePlaceTypeEnum.historical_museum]: \"Исторческий музей\",\n            [FoursquarePlaceTypeEnum.science_museum]: \"Музей наук\",\n            [FoursquarePlaceTypeEnum.theater]: \"Теарт\",\n            [FoursquarePlaceTypeEnum.opera_theatre]: \"Оперный театр\",\n            [FoursquarePlaceTypeEnum.forest]: \"Лес\",\n            [FoursquarePlaceTypeEnum.national_park]: \"Национальный парк\",\n            [FoursquarePlaceTypeEnum.natural_park]: \"Природный парк\",\n        }\n\n        return typeObj[type] || `ERROR ${type}`\n    }\n}\n","import PlaceTypeEnum from \"./PlaceType\";\n\nexport default class FoursquarePlaceTypeEnum {\n    static get place_of_view(){return \"place_of_view\"}\n    static get reserve(){return \"reserve\"}\n    static get botanical_garden(){return \"botanical_garden\"}\n    static get mountain(){return \"mountain\"}\n    static get lake(){return \"lake\"}\n    static get restaurant(){return \"restaurant\"}\n    static get art_gallery(){return \"art_gallery\"}\n    static get building(){return \"building\"}\n    static get castle(){return \"castle\"}\n    static get garden(){return \"garden\"}\n    static get historical_and_protected_object(){return \"historical_and_protected_object\"}\n    static get monument(){return \"monument\"}\n    static get palace(){return \"palace\"}\n    static get square(){return \"square\"}\n    static get art_museum(){return \"art_museum\"}\n    static get historical_museum(){return \"historical_museum\"}\n    static get science_museum(){return \"science_museum\"}\n    static get theater(){return \"theater\"}\n    static get opera_theatre(){return \"opera_theatre\"}\n    static get forest(){return \"forest\"}\n    static get national_park(){return \"national_park\"}\n    static get natural_park(){return \"natural_park\"}\n\n    static get typeOriginIds() {\n        return {\n            [PlaceTypeEnum.reserve]: [16028],\n            [PlaceTypeEnum.botanical_garden]: [16005],\n            [PlaceTypeEnum.mountains]: [16027],\n            [PlaceTypeEnum.lake]: [16023],\n            [PlaceTypeEnum.restaurant]: [13065],\n            [PlaceTypeEnum.art_gallery]: [10004],\n            [PlaceTypeEnum.tourist_attraction]: [16007, 16011, 16017, 16020, 16026, 16031, 16041],\n            [PlaceTypeEnum.museum]: [10028, 10030, 10031],\n            [PlaceTypeEnum.theater]: [10043, 10042],\n            [PlaceTypeEnum.park]: [16015, 16034, 16035],\n            [PlaceTypeEnum.place_of_view]: [16046],\n        }\n    }\n\n    static get typeIds() {\n        return {\n            [FoursquarePlaceTypeEnum.place_of_view]: 16046,\n            [FoursquarePlaceTypeEnum.reserve]: 16028,\n            [FoursquarePlaceTypeEnum.botanical_garden]: 16005,\n            [FoursquarePlaceTypeEnum.mountain]: 16027,\n            [FoursquarePlaceTypeEnum.lake]: 16023,\n            [FoursquarePlaceTypeEnum.restaurant]: 13065,\n            [FoursquarePlaceTypeEnum.art_gallery]: 10004,\n            [FoursquarePlaceTypeEnum.building]: 16007,\n            [FoursquarePlaceTypeEnum.castle]: 16011,\n            [FoursquarePlaceTypeEnum.garden]: 16017,\n            [FoursquarePlaceTypeEnum.historical_and_protected_object]: 16020,\n            [FoursquarePlaceTypeEnum.monument]: 16026,\n            [FoursquarePlaceTypeEnum.palace]: 16031,\n            [FoursquarePlaceTypeEnum.square]: 16041,\n            [FoursquarePlaceTypeEnum.art_museum]: 10028,\n            [FoursquarePlaceTypeEnum.historical_museum]: 10030,\n            [FoursquarePlaceTypeEnum.science_museum]: 10031,\n            [FoursquarePlaceTypeEnum.theater]: 10043,\n            [FoursquarePlaceTypeEnum.opera_theatre]: 10042,\n            [FoursquarePlaceTypeEnum.forest]: 16015,\n            [FoursquarePlaceTypeEnum.national_park]: 16034,\n            [FoursquarePlaceTypeEnum.natural_park]: 16035,\n        }\n    }\n}\n"],"sourceRoot":""}