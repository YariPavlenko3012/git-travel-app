{"version":3,"sources":["model/language.model.js","constants/admin/api.constant.js","utils/Querystring.js","model/media.model.js","model/City/cabs.model.js","model/City/language.model.js","model/City/city.model.js","components/Form/components/FormItem.jsx","model/currency.model.js","model/Country/language.model.js","model/Country/country.model.js","components/Form/index.jsx","components/Form/FieldInput.jsx","components/Form/FieldSelect.jsx","utils/Select.js","services/dictionary.service.js","services/admin/city.service.js","components/UploadFiles/index.module.scss","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","services/files.service.js","components/UploadFiles/index.jsx","components/Form/FieldTextarea.jsx","components/Select/Country.js","pages/admin/pages/City/components/Form/CabsCreate.jsx","pages/admin/pages/City/components/Form/CabsUpdate.jsx","pages/admin/pages/City/components/Form/LanguageCreate.jsx","pages/admin/pages/City/components/Form/LanguageUpdate.jsx","pages/admin/pages/City/components/Form/CityUpdate.jsx","pages/admin/pages/City/Edit/index.jsx"],"names":["LanguageModel","data","this","id","name","lang_code","ADMIN","ADMIN_COUNTRY","API_ADMIN_COUNTRY_LIST","API_ADMIN_COUNTRY_CREATE","API_MAKE_ADMIN_COUNTRY_UPDATE","countryId","API_MAKE_ADMIN_COUNTRY_DELETE","API_MAKE_ADMIN_COUNTRY_SHOW","API_MAKE_ADMIN_COUNTRY_TRANSLATE_CREATE","API_MAKE_ADMIN_COUNTRY_TRANSLATE_EDIT","translateId","ADMIN_SIGHT","API_ADMIN_SIGHT_LIST","API_ADMIN_SIGHT_CREATE","API_MAKE_ADMIN_SIGHT_UPDATE","sightId","API_MAKE_ADMIN_SIGHT_DELETE","API_MAKE_ADMIN_SIGHT_SHOW","API_MAKE_ADMIN_SIGHT_TRANSLATE_CREATE","API_MAKE_ADMIN_SIGHT_TRANSLATE_EDIT","ADMIN_CITY","API_ADMIN_CITY_LIST","API_ADMIN_CITY_CREATE","API_MAKE_ADMIN_CITY_EDIT","cityId","API_MAKE_ADMIN_CITY_SHOW","API_MAKE_ADMIN_CITY_TRANSLATE_CREATE","API_MAKE_ADMIN_CITY_TRANSLATE_EDIT","API_MAKE_ADMIN_CITY_TAXI_CREATE","API_MAKE_ADMIN_CITY_TAXI_EDIT","cabId","ADMIN_LANGUAGE","API_ADMIN_LANGUAGE_LIST","API_ADMIN_LANGUAGE_CREATE","API_MAKE_ADMIN_CITY_LANGUAGE_DELETE","languageId","API_MAKE_ADMIN_LANGUAGE_SHOW","API_MAKE_ADMIN_LANGUAGE_UPDATE","ADMIN_CURRENCY","API_ADMIN_CURRENCY_LIST","API_ADMIN_CURRENCY_CREATE","API_MAKE_ADMIN_CITY_CURRENCY_DELETE","currencyId","API_MAKE_ADMIN_CURRENCY_SHOW","API_MAKE_ADMIN_CURRENCY_UPDATE","DICTIONARY","API_DICTIONARY_COUNTRIES_URL","API_DICTIONARY_CITIES_URL","API_DICTIONARY_LANGUAGES_URL","API_DICTIONARY_CURRENCIES_URL","QueryString","obj","qs","stringify","encode","queryString","parse","slice","MediaModel","path","CabModel","trim","phone_number","CityLanguageModel","city_description","city_name","language","CityModel","description","country","CountryModel","languages","map","images","image","population","cabs","cab","FormItem","label","children","hidden","props","Item","validateStatus","meta","error","submitError","touched","help","CurrencyModel","currency_code","CountryLanguageModel","country_description","country_name","country_code_in_iso_3166_1_format","official_language","capital","currency","ambulance_number","has_seas","has_mountains","happiness_rating","highest_point","country_area","safety_index","FormUI","render","onSubmit","onError","useContext","AlertContext","setAlertError","onSubmitForm","values","message","errors","console","Object","keys","reduce","newError","splitKey","split","helpString","forEach","key","eval","mutators","arrayMutators","clear","state","field","changeValue","setValue","value","FieldInput","placeholder","type","disabled","onBlur","input","rest","Components","Input","Password","Fragment","onChange","e","size","FieldSelect","options","select","defaultValue","style","minWidth","val","Select","item","accum","prev","DictionaryService","params","axios","get","paramsSerializer","CityService","cityList","city","post","put","module","exports","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","FilesService","delete","UploadFiles","fileName","length","useForm","useFormState","submitErrors","setAlertSuccess","useState","inProp","setInProp","previewFiles","setPreviewFiles","setImageValue","imgId","onDelete","deletedFile","files_ids","newFiles","filter","file","files","target","formData","FormData","i","append","upload","then","fileLists","newPreviewFileList","className","marginBottom","styles","download__btn_wrapper","download__btn","onClick","download__btn_actions","multiple","src","alt","download__btn_download","overflow","download__preview","download__preview_wrapper","download__preview_img","download__preview_delete","viewBox","focusable","data-icon","width","height","fill","aria-hidden","d","TextArea","FieldSelectCountry","searchParams","countryOptions","setCountryOptions","getCountryOptions","countries","optionsByRow","useEffect","CreateCityCabsForm","getCity","createCityTaxi","createTaxi","city_id","Form","handleSubmit","submitting","onFinish","layout","display","flexWrap","alignItems","marginRight","required","variant","htmlType","UpdateCityCabsForm","updateCityTaxi","Promise","all","updateTaxi","initialValues","index","languages_list","CreateCityLanguageForm","createCityTranslate","createTranslate","lang","language_id","justifyContent","FieldTextarea","UpdateCityLanguageForm","updateCityTranslate","updateTranslate","log","translate","UpdateCityForm","updateCity","copyValues","JSON","update","country_id","showSearch","CityCreate","setCity","isReady","setIsReady","useParams","show","fontSize","fontWeight","to","ADMIN_MAKE_SHOW_CITY_URI","paddingBottom"],"mappings":"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","file":"static/js/18.ca64af69.chunk.js","sourcesContent":["export default class LanguageModel {\r\n    constructor(data = {}) {\r\n        this.id = data.id;\r\n        this.name = data.name;\r\n        this.lang_code = data.lang_code;\r\n    }\r\n}\r\n","export const API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\n\r\nconst REQUEST_VERSION = \"/v1\";\r\n\r\nconst ADMIN = `${REQUEST_VERSION}/admin`;\r\n\r\nconst ADMIN_COUNTRY = `${ADMIN}/countries`;\r\nexport const API_ADMIN_COUNTRY_LIST = `${ADMIN_COUNTRY}`;\r\nexport const API_ADMIN_COUNTRY_CREATE = `${ADMIN_COUNTRY}`;\r\nexport const API_MAKE_ADMIN_COUNTRY_UPDATE = countryId => `${ADMIN_COUNTRY}/${countryId}`;\r\nexport const API_MAKE_ADMIN_COUNTRY_DELETE = countryId => `${ADMIN_COUNTRY}/${countryId}`;\r\nexport const API_MAKE_ADMIN_COUNTRY_SHOW = countryId => `${ADMIN_COUNTRY}/${countryId}`;\r\nexport const API_MAKE_ADMIN_COUNTRY_TRANSLATE_CREATE = countryId =>  `${ADMIN_COUNTRY}/${countryId}/languages`;\r\nexport const API_MAKE_ADMIN_COUNTRY_TRANSLATE_EDIT = (countryId, translateId) => `${ADMIN_COUNTRY}/${countryId}/languages/${translateId}`;\r\n\r\nconst ADMIN_SIGHT = `${ADMIN}/sights`;\r\nexport const API_ADMIN_SIGHT_LIST = `${ADMIN_SIGHT}`;\r\nexport const API_ADMIN_SIGHT_CREATE = `${ADMIN_SIGHT}`;\r\nexport const API_MAKE_ADMIN_SIGHT_UPDATE = sightId => `${ADMIN_SIGHT}/${sightId}`;\r\nexport const API_MAKE_ADMIN_SIGHT_DELETE = sightId => `${ADMIN_SIGHT}/${sightId}`;\r\nexport const API_MAKE_ADMIN_SIGHT_SHOW = sightId => `${ADMIN_SIGHT}/${sightId}`;\r\nexport const API_MAKE_ADMIN_SIGHT_TRANSLATE_CREATE = sightId => `${ADMIN_SIGHT}/${sightId}/languages`;\r\nexport const API_MAKE_ADMIN_SIGHT_TRANSLATE_EDIT = (sightId, translateId) => `${ADMIN_SIGHT}/${sightId}/languages/${translateId}`;\r\n\r\nconst ADMIN_CITY = `${ADMIN}/cities`;\r\nexport const API_ADMIN_CITY_LIST = `${ADMIN_CITY}`;\r\nexport const API_ADMIN_CITY_CREATE = `${ADMIN_CITY}`;\r\nexport const API_MAKE_ADMIN_CITY_EDIT = cityId => `${ADMIN_CITY}/${cityId}`;\r\nexport const API_MAKE_ADMIN_CITY_SHOW = cityId => `${ADMIN_CITY}/${cityId}`;\r\nexport const API_MAKE_ADMIN_CITY_TRANSLATE_CREATE = cityId =>`${ADMIN_CITY}/${cityId}/languages`;\r\nexport const API_MAKE_ADMIN_CITY_TRANSLATE_EDIT = (cityId, translateId) => `${ADMIN_CITY}/${cityId}/languages/${translateId}`;\r\nexport const API_MAKE_ADMIN_CITY_TAXI_CREATE = cityId => `${ADMIN_CITY}/${cityId}/cabs`;\r\nexport const API_MAKE_ADMIN_CITY_TAXI_EDIT = (cityId, cabId) => `${ADMIN_CITY}/${cityId}/cabs/${cabId}`;\r\n\r\n\r\nconst ADMIN_LANGUAGE = `${ADMIN}/languages`;\r\nexport const API_ADMIN_LANGUAGE_LIST = `${ADMIN_LANGUAGE}`;\r\nexport const API_ADMIN_LANGUAGE_CREATE = `${ADMIN_LANGUAGE}`;\r\nexport const API_MAKE_ADMIN_CITY_LANGUAGE_DELETE = languageId => `${ADMIN_LANGUAGE}/${languageId}`;\r\nexport const API_MAKE_ADMIN_LANGUAGE_SHOW = languageId => `${ADMIN_LANGUAGE}/${languageId}`;\r\nexport const API_MAKE_ADMIN_LANGUAGE_UPDATE = languageId => `${ADMIN_LANGUAGE}/${languageId}`;\r\n\r\nconst ADMIN_CURRENCY = `${ADMIN}/currencies`;\r\nexport const API_ADMIN_CURRENCY_LIST = `${ADMIN_CURRENCY}`;\r\nexport const API_ADMIN_CURRENCY_CREATE = `${ADMIN_CURRENCY}`;\r\nexport const API_MAKE_ADMIN_CITY_CURRENCY_DELETE = currencyId => `${ADMIN_CURRENCY}/${currencyId}`;\r\nexport const API_MAKE_ADMIN_CURRENCY_SHOW = currencyId => `${ADMIN_CURRENCY}/${currencyId}`;\r\nexport const API_MAKE_ADMIN_CURRENCY_UPDATE = currencyId => `${ADMIN_CURRENCY}/${currencyId}`;\r\n\r\n//DICTIONARY\r\nconst DICTIONARY = `${ADMIN}/dictionary`;\r\nexport const API_DICTIONARY_COUNTRIES_URL = `${DICTIONARY}/countries`;\r\nexport const API_DICTIONARY_CITIES_URL = `${DICTIONARY}/cities`;\r\nexport const API_DICTIONARY_LANGUAGES_URL = `${DICTIONARY}/languages`;\r\nexport const API_DICTIONARY_CURRENCIES_URL = `${DICTIONARY}/currencies`;\r\n","import qs from 'qs'\r\n\r\n\r\nexport class QueryString {\r\n    static stringify(obj) {\r\n        return qs.stringify(obj, { encode: false })\r\n    }\r\n    \r\n    static parseQueryString(queryString) {\r\n        return qs.parse(queryString.slice(1))\r\n    }\r\n}\r\n","export default class MediaModel {\r\n    constructor(data = {}) {\r\n        this.id = data.id;\r\n        this.path = data.path;\r\n    }\r\n}\r\n","export default class CabModel {\r\n    constructor(data = {}) {\r\n        this.id =  data.id;\r\n        this.name = data.name.trim();\r\n        this.phone_number = data.phone_number.trim();\r\n    }\r\n}\r\n","import LanguageModel from \"../language.model\";\r\n\r\nexport default class CityLanguageModel {\r\n    constructor(data = {}) {\r\n        this.city_description = data.city_description;\r\n        this.city_name = data.city_name;\r\n        this.id = data.id;\r\n        this.language = new LanguageModel(data.language);\r\n    }\r\n}\r\n","import MediaModel from '../media.model'\r\nimport CabModel from \"./cabs.model\";\r\nimport CityLanguageModel from \"./language.model\";\r\nimport CountryModel from \"../Country/country.model\";\r\n\r\nexport default class CityModel {\r\n    constructor(data = {}) {\r\n        this.id = data.id;\r\n        this.name = data.name;\r\n        this.description = data.description;\r\n        this.country = new CountryModel(data.country);\r\n        this.languages = (data.languages || []).map( language => new CityLanguageModel(language));\r\n        this.images = (data.images || []).map( image => new MediaModel(image));\r\n        this.population = data.population;\r\n        this.cabs = (data.cabs || []).map( cab => new CabModel(cab));\r\n    }\r\n}\r\n","import {Form} from \"antd\";\r\nimport React from \"react\";\r\n\r\nexport default function FormItem({ label, name, children, hidden, ...props }) {\r\n    return (\r\n        <Form.Item label={label || \"\"}\r\n                   name={name}\r\n                   validateStatus={(props.meta.error || props.meta.submitError) && props.meta.touched ? \"error\" : false}\r\n                   help={(props.meta.error || props.meta.submitError) && props.meta.touched ? props.meta.error || props.meta.submitError : false}\r\n                   hidden={hidden}>\r\n            {children}\r\n        </Form.Item>\r\n    )\r\n}\r\n","export default class CurrencyModel {\r\n    constructor(data = {}) {\r\n        this.id = data.id;\r\n        this.currency_code = data.currency_code;\r\n    }\r\n}\r\n","import LanguageModel from \"../language.model\";\r\n\r\nexport default class CountryLanguageModel {\r\n    constructor(data = {}) {\r\n        this.country_description = data.country_description;\r\n        this.country_name = data.country_name;\r\n        this.id = data.id;\r\n        this.language = new LanguageModel(data.language);\r\n    }\r\n};\r\n","import CityModel from '../City/city.model'\r\nimport MediaModel from \"../media.model\";\r\nimport CurrencyModel from \"../currency.model\";\r\nimport LanguageModel from \"../language.model\";\r\nimport CountryLanguageModel from \"./language.model\";\r\n\r\nexport default class CountryModel {\r\n    constructor(data = {}) {\r\n        this.id = data.id;\r\n        this.country_code_in_iso_3166_1_format = data.country_code_in_iso_3166_1_format;\r\n        this.population = data.population;\r\n        this.official_language = new LanguageModel(data.official_language);\r\n        this.capital = data.capital ? new CityModel(data.capital) : null;\r\n        this.currency = new CurrencyModel(data.currency);\r\n        this.name = data.name;\r\n        this.languages = (data.languages || []).map( language => new CountryLanguageModel(language));\r\n        this.description = data.description;\r\n        this.ambulance_number = data.ambulance_number;\r\n        this.has_seas = data.has_seas;\r\n        this.has_mountains = data.has_mountains;\r\n        this.happiness_rating = data.happiness_rating;\r\n        this.highest_point = data.highest_point;\r\n        this.country_area = data.country_area;\r\n        this.safety_index = data.safety_index;\r\n        this.images = (data.images || []).map( image => new MediaModel(image));\r\n    }\r\n};\r\n","import React, {useContext} from \"react\";\r\nimport {Form} from \"react-final-form\";\r\nimport arrayMutators from 'final-form-arrays'\r\nimport {AlertContext} from \"../../pages/context/alert.context\";\r\n\r\nexport default function FormUI({render, onSubmit = () => {} , onError = () => {}, ...props}) {\r\n    const {setAlertError} = useContext(AlertContext)\r\n\r\n    const onSubmitForm = async (values) => {\r\n        try {\r\n            await onSubmit(values);\r\n        } catch (e) {\r\n            setAlertError(e.message);\r\n        \r\n            if(!e.errors){\r\n                return console.error(e.message)\r\n            }\r\n            onError();\r\n        \r\n        \r\n            return Object.keys(e.errors).reduce((newError, keys) => {\r\n                const splitKey = keys.split('.');\r\n                const error = typeof e.errors[keys] === 'string' ? e.errors[keys] : e.errors[keys][0];\r\n            \r\n                let helpString = 'newError';\r\n                splitKey.forEach( key => {\r\n                    helpString += `['${key}']`;\r\n                    if(!eval(`${helpString}`)){\r\n                        eval(`${helpString} = {}`);\r\n                    }\r\n                });\r\n            \r\n                eval(`${helpString} = \"${error}\"`);\r\n            \r\n                return newError\r\n            }, {});\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={onSubmitForm}\r\n              mutators={{\r\n                  ...arrayMutators,\r\n                  clear: ([field], state, {changeValue}) => {\r\n                      changeValue(state, field, () => undefined);\r\n                  },\r\n                  setValue: ([field, value], state, {changeValue}) => {\r\n                      changeValue(state, field, () => value)\r\n                  }\r\n              }}\r\n              render={render}\r\n              {...props}\r\n        />\r\n    )\r\n}\r\n","/**\r\n * external libs\r\n */\r\nimport {Field} from \"react-final-form\";\r\nimport React from \"react\";\r\nimport {Input} from 'antd'\r\n/**\r\n * components\r\n */\r\nimport FormItem from './components/FormItem'\r\n\r\nexport default function FieldInput({label = \"\", name, placeholder = \"\", type = \"text\", disabled = false, onBlur, input, ...rest}) {\r\n    const Components = type === 'password' ? Input.Password : Input;\r\n\r\n    return (\r\n        <Field name={name}>\r\n            {props => (\r\n                <FormItem label={label} name={name} {...props} {...rest}>\r\n                    <React.Fragment>\r\n                        <Components placeholder={placeholder}\r\n                                    onChange={props.input.onChange}\r\n                                    onBlur={(e) => {\r\n                                        if(onBlur) {\r\n                                            onBlur(e)\r\n                                        }\r\n                                        props.input.onBlur(e);\r\n                                    }}\r\n                                    disabled={disabled}\r\n                                    name={name}\r\n                                    type={type}\r\n                                    value={props.input.value}\r\n                                    size=\"large\"\r\n                                    {...input}\r\n                                    {...props} />\r\n                    </React.Fragment>\r\n                </FormItem>\r\n            )}\r\n        </Field>\r\n    )\r\n}\r\n","/**\r\n * external libs\r\n */\r\nimport {Field} from \"react-final-form\";\r\nimport React from \"react\";\r\nimport {Select} from \"antd\";\r\n/**\r\n * components\r\n */\r\nimport FormItem from './components/FormItem'\r\n\r\n\r\nexport default function FieldSelect({label, name, options, select, placeholder, defaultValue, disabled, onChange, ...rest}) {\r\n    \r\n    return (\r\n      <Field name={name}>\r\n          {props => (\r\n            <FormItem label={label} name={name} {...props} {...rest}>\r\n                <React.Fragment>\r\n                    <Select\r\n                      size=\"large\"\r\n                      {...select}\r\n                      value={props.input.value || defaultValue || []}\r\n                      placeholder={placeholder}\r\n                      options={options}\r\n                      disabled={disabled}\r\n                      style={{minWidth: \"100%\"}}\r\n                      onChange={(val) => {\r\n                          if(onChange) {\r\n                              onChange(val)\r\n                          }\r\n                          props.input.onChange(val)\r\n                      }}\r\n                    />\r\n                </React.Fragment>\r\n            </FormItem>\r\n          )}\r\n      </Field>\r\n    \r\n    )\r\n}\r\n","export default class Select {\r\n    static optionsByRow (data, value, label) {\r\n        return data.map( item => ({\r\n            label: label.split('.').reduce((accum, prev) => accum[prev], item),\r\n            value: value.split('.').reduce((accum, prev) => accum[prev], item)\r\n        }))\r\n    }\r\n}\r\n\r\n","/**\r\n *service\r\n */\r\nimport axios from 'axios'\r\n/**\r\n * const\r\n */\r\nimport {\r\n    API_DICTIONARY_CITIES_URL,\r\n    API_DICTIONARY_COUNTRIES_URL,\r\n    API_DICTIONARY_CURRENCIES_URL,\r\n    API_DICTIONARY_LANGUAGES_URL,\r\n} from \"../constants/admin/api.constant\";\r\n/**\r\n * utils\r\n */\r\nimport {QueryString} from \"../utils/Querystring\";\r\n\r\nexport default class DictionaryService {\r\n    static async countries(params = {}) {\r\n        return await axios.get(API_DICTIONARY_COUNTRIES_URL, {\r\n            params,\r\n            paramsSerializer: params => {\r\n                return QueryString.stringify(params)\r\n            }\r\n        });\r\n    }\r\n    \r\n    static async cities(params = {}) {\r\n        return await axios.get(API_DICTIONARY_CITIES_URL, {\r\n            params,\r\n            paramsSerializer: params => {\r\n                return QueryString.stringify(params)\r\n            }\r\n        });\r\n    }\r\n    \r\n    static async languages() {\r\n        return await axios.get(API_DICTIONARY_LANGUAGES_URL);\r\n    }\r\n    \r\n    static async currencies() {\r\n        return await axios.get(API_DICTIONARY_CURRENCIES_URL);\r\n    }\r\n}\r\n\r\n","/**\r\n *service\r\n */\r\nimport axios from 'axios'\r\n/**\r\n * const\r\n */\r\nimport {\r\n    API_ADMIN_CITY_CREATE,\r\n    API_MAKE_ADMIN_CITY_TRANSLATE_CREATE,\r\n    API_ADMIN_CITY_LIST,\r\n    API_MAKE_ADMIN_CITY_TAXI_CREATE,\r\n    API_MAKE_ADMIN_CITY_SHOW,\r\n    API_MAKE_ADMIN_CITY_EDIT,\r\n    API_MAKE_ADMIN_CITY_TAXI_EDIT,\r\n    API_MAKE_ADMIN_CITY_TRANSLATE_EDIT,\r\n} from \"../../constants/admin/api.constant\";\r\n/**\r\n * utils\r\n */\r\nimport {QueryString} from \"../../utils/Querystring\";\r\n/**\r\n * model\r\n */\r\nimport CityModel from \"../../model/City/city.model\";\r\n\r\nexport default class CityService {\r\n    static async list(params) {\r\n        let cityList = await axios.get(API_ADMIN_CITY_LIST, {\r\n            params,\r\n            paramsSerializer: params => {\r\n                return QueryString.stringify(params)\r\n            }\r\n        });\r\n    \r\n        cityList = cityList.map(city => new CityModel(city));\r\n    \r\n        return cityList;\r\n    }\r\n    \r\n    static async show(cityId) {\r\n        return new CityModel(await axios.get(API_MAKE_ADMIN_CITY_SHOW(cityId)));\r\n    }\r\n    \r\n    static async create(data) {\r\n        return new CityModel(await axios.post(API_ADMIN_CITY_CREATE, data));\r\n    }\r\n    \r\n    static async update(cityId, data) {\r\n        return new CityModel(await axios.put(API_MAKE_ADMIN_CITY_EDIT(cityId), data));\r\n    }\r\n    \r\n    static async createTaxi(cityId, data) {\r\n        return await axios.post(API_MAKE_ADMIN_CITY_TAXI_CREATE(cityId), data);\r\n    }\r\n    \r\n    static async updateTaxi(cityId, cabId, data) {\r\n        return await axios.put(API_MAKE_ADMIN_CITY_TAXI_EDIT(cityId, cabId), data);\r\n    }\r\n    \r\n    static async createTranslate(cityId, data) {\r\n        return await axios.post(API_MAKE_ADMIN_CITY_TRANSLATE_CREATE(cityId), data);\r\n    }\r\n    \r\n    static async updateTranslate(countryId, translateId, data) {\r\n        return await axios.put(API_MAKE_ADMIN_CITY_TRANSLATE_EDIT(countryId, translateId), data);\r\n    }\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"download__btn\":\"UploadFiles_download__btn__2EFla\",\"download__btn_wrapper\":\"UploadFiles_download__btn_wrapper__2g1_Z\",\"error\":\"UploadFiles_error__3vRHh\",\"download__btn_ico\":\"UploadFiles_download__btn_ico__R3pzS\",\"download__btn_actions\":\"UploadFiles_download__btn_actions__GYFwv\",\"download__preview\":\"UploadFiles_download__preview__K1IF4\",\"download__preview_wrapper\":\"UploadFiles_download__preview_wrapper__c9jk4\",\"download__preview_img\":\"UploadFiles_download__preview_img__2OR_-\",\"download__preview_delete\":\"UploadFiles_download__preview_delete__1_eQy\"};","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/**\r\n *service\r\n */\r\nimport axios from 'axios'\r\n/**\r\n * const\r\n */\r\nimport {\r\n    API_MAKE_ACCOUNT_USER_INFO_URL,\r\n} from \"../constants/api.constant\";\r\nimport {API_ADMIN_CITY_LIST} from \"../constants/admin/api.constant\";\r\nimport {QueryString} from \"../utils/Querystring\";\r\nexport default class FilesService {\r\n    static async upload(data) {\r\n        return await axios.post(\"/v1/files\", data)\r\n    }\r\n    \r\n    static async delete(data) {\r\n        return await axios.delete(\"/v1/files\", {\r\n            params: data,\r\n            paramsSerializer: params => {\r\n                return QueryString.stringify(params)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n","/**\r\n * external libs\r\n */\r\nimport {SlideDown} from 'react-slidedown/lib/slidedown'\r\nimport React, {useContext, useState} from \"react\";\r\nimport {Field, useForm, useFormState} from \"react-final-form\";\r\n/**\r\n * context\r\n */\r\nimport {AlertContext} from \"../../pages/context/alert.context\";\r\n/**\r\n * styles\r\n */\r\nimport styles from './index.module.scss';\r\nimport FilesService from \"../../services/files.service\";\r\n\r\nexport default function UploadFiles({name, fileName}) {\r\n    const key = name.split(\".\")[name.split(\".\").length - 1];\r\n    const {mutators: {setValue}} = useForm();\r\n    const {submitErrors, values} = useFormState();\r\n    const {setAlertSuccess} = useContext(AlertContext);\r\n    const [inProp, setInProp] = useState(false  );\r\n    const [previewFiles, setPreviewFiles] = useState( values[name] || []);\r\n\r\n    const setImageValue = (name, imgId) => {\r\n        setValue(name, imgId)\r\n    };\r\n    \r\n    const onDelete = async (deletedFile) => {\r\n        await FilesService.delete({files_ids: [deletedFile.id]})\r\n        const newFiles = previewFiles.filter(file => file.id !== deletedFile.id);\r\n        setPreviewFiles(newFiles);\r\n        setImageValue(name, newFiles);\r\n    };\r\n    \r\n    const onChange = async (e) => {\r\n        const {files} = e.target;\r\n        \r\n        const formData = new FormData;\r\n    \r\n        for (let i = 0; i < files.length; i++){\r\n            formData.append(\"files[]\", files[i]);\r\n        }\r\n    \r\n        FilesService.upload(formData)\r\n        .then(fileLists => {\r\n            let newPreviewFileList = [];\r\n    \r\n            fileLists.forEach( file => {\r\n                newPreviewFileList = [...newPreviewFileList, file];\r\n            });\r\n    \r\n            setAlertSuccess(\"Files successfully uploaded\");\r\n            setPreviewFiles([...newPreviewFileList, ...previewFiles]);\r\n            setImageValue(name, [...newPreviewFileList, ...previewFiles]);\r\n            setInProp(true)\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <Field name=\"file\">\r\n            {props => (\r\n                <div className=\"preview-img\" style={{marginBottom: \"1rem\"}}>\r\n                    <div className={styles.download__btn_wrapper}>\r\n                        <div className={`${styles.download__btn} ${submitErrors?.[key] ? styles.error : \"\"}`} onClick={() => setInProp(!inProp)}>\r\n                            <div>\r\n                                Upload {fileName}\r\n                            </div>\r\n                        </div>\r\n                        <label className={styles.download__btn_actions}>\r\n                            <input name=\"myFile\" type=\"file\" hidden={true} multiple={true} onChange={onChange}/>\r\n                            <img src=\"/git-travel-app/img/download.svg\" alt=\"download\"\r\n                                 className={styles.download__btn_download}/>\r\n                        </label>\r\n                    </div>\r\n                    <SlideDown className={'my-dropdown-slidedown'}>\r\n                        {inProp && (\r\n                          <div style={{ overflow: \"hidden\"}}>\r\n                              <div className={styles.download__preview}>\r\n                                  {previewFiles.map( file => (\r\n                                    <div className={styles.download__preview_wrapper}>\r\n                                        <img className={styles.download__preview_img} src={file.path} alt=\"image\"/>\r\n                                        <div className={styles.download__preview_delete} onClick={() => onDelete(file)}>\r\n                                            <svg viewBox=\"64 64 896 896\" focusable=\"false\" data-icon=\"delete\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\"><path d=\"M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z\" fill={\"red\"}></path></svg>\r\n                                        </div>\r\n                                    </div>\r\n                                  ))}\r\n                              </div>\r\n                          </div>\r\n                        )}\r\n                    </SlideDown>\r\n                    \r\n                </div>\r\n            )}\r\n        </Field>\r\n    )\r\n}\r\n","/**\r\n * external libs\r\n */\r\nimport {Field} from \"react-final-form\";\r\nimport React from \"react\";\r\nimport {Input} from 'antd'\r\n/**\r\n * components\r\n */\r\nimport FormItem from './components/FormItem'\r\n\r\nexport default function FieldInput({label = \"\", name, placeholder = \"\", disabled = false, onBlur, input, ...rest}) {\r\n    return (\r\n        <Field name={name}>\r\n            {props => (\r\n                <FormItem label={label} name={name} {...props} {...rest}>\r\n                    <React.Fragment>\r\n                        <Input.TextArea placeholder={placeholder}\r\n                                        onChange={props.input.onChange}\r\n                                        onBlur={(e) => {\r\n                                            if(onBlur) {\r\n                                                onBlur(e)\r\n                                            }\r\n                                            props.input.onBlur(e);\r\n                                        }}\r\n                                        disabled={disabled}\r\n                                        name={name}\r\n                                        value={props.input.value}\r\n                                        size=\"large\"\r\n                                        {...input}\r\n                                        {...props} />\r\n                    </React.Fragment>\r\n                </FormItem>\r\n            )}\r\n        </Field>\r\n    )\r\n}\r\n","/**\r\n * external libs\r\n */\r\nimport React, {useEffect, useState} from \"react\";\r\n/**\r\n * components\r\n */\r\nimport FieldSelect from \"../Form/FieldSelect\";\r\n/**\r\n * utils\r\n */\r\nimport Select from \"../../utils/Select\";\r\n/**\r\n * services\r\n */\r\nimport DictionaryService from \"../../services/dictionary.service\";\r\n\r\n\r\nexport default function FieldSelectCountry({label = true, name, select, onChange, searchParams = {}, disabled = false, data = null, ...rest}) {\r\n    const [countryOptions, setCountryOptions] = useState([]);\r\n\r\n    const getCountryOptions = async () => {\r\n        setCountryOptions(data || Select.optionsByRow(await DictionaryService.countries(searchParams), \"id\", \"name\"))\r\n    };\r\n\r\n    useEffect(() => {\r\n        getCountryOptions();\r\n    }, []);\r\n\r\n    return (\r\n        <FieldSelect {...rest}\r\n                     label={label ? \"Country\" : \"\"}\r\n                     name={name}\r\n                     select={select}\r\n                     onChange={onChange}\r\n                     options={countryOptions}\r\n                     placeholder=\"Select country\"\r\n                     disabled={disabled}/>\r\n    )\r\n}\r\n","/**\r\n * external libs\r\n */\r\nimport {Button, Form} from \"antd\";\r\nimport React from \"react\";\r\n/**\r\n * components\r\n */\r\nimport FieldInput from \"../../../../../../components/Form/FieldInput\";\r\nimport FormUI from \"../../../../../../components/Form\";\r\n/**\r\n * services\r\n */\r\nimport CityService from \"../../../../../../services/admin/city.service\";\r\n\r\nexport default function CreateCityCabsForm({ cityId, getCity }) {\r\n    const createCityTaxi = async (value) => {\r\n        await CityService.createTaxi(cityId, {city_id: cityId, ...value});\r\n        await getCity(cityId)\r\n    };\r\n    \r\n    return (\r\n      <FormUI onSubmit={createCityTaxi}\r\n              render={({handleSubmit, submitting}) => (\r\n                <Form onFinish={handleSubmit} layout=\"vertical\">\r\n                    <div style={{display: \"flex\", flexWrap: \"wrap\", alignItems: \"flex-end\"}}>\r\n                        <div style={{width: \"calc(100% / 4 - 10px)\", marginRight: 10}}>\r\n                            <FieldInput label=\"Taxi name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter taxi name\"\r\n                                        required={true}/>\r\n                        </div>\r\n                        <div style={{width: \"calc(100% / 4 - 10px)\", marginRight: 10}}>\r\n                            <FieldInput label=\"Taxi phone number\"\r\n                                        name=\"phone_number\"\r\n                                        placeholder=\"Enter taxi phone\"\r\n                                        required={true}/>\r\n                        </div>\r\n                    </div>\r\n                    <Button variant=\"primary\" htmlType=\"submit\" disabled={!cityId}>Create</Button>\r\n                </Form>\r\n              )}\r\n      />\r\n    )\r\n}\r\n","/**\r\n * external libs\r\n */\r\nimport {Button, Form} from \"antd\";\r\nimport React from \"react\";\r\n/**\r\n * components\r\n */\r\nimport FormUI from \"../../../../../../components/Form\";\r\nimport FieldInput from \"../../../../../../components/Form/FieldInput\";\r\n/**\r\n * services\r\n */\r\nimport CityService from \"../../../../../../services/admin/city.service\";\r\n\r\nexport default function UpdateCityCabsForm({ city, cityId, getCity }) {\r\n    const updateCityTaxi = async (value) => {\r\n        Promise.all(value.cabs.map(cab => CityService.updateTaxi(cityId, cab.id, {\r\n            city_id: cityId,\r\n            name: cab.name,\r\n            phone_number: cab.phone_number,\r\n            id: cab.id,\r\n        })))\r\n        .then(() => getCity(cityId))\r\n    };\r\n    \r\n    return (\r\n      <FormUI onSubmit={updateCityTaxi}\r\n              initialValues={{\r\n                  cabs: city.cabs\r\n              }}\r\n              render={({handleSubmit, values}) => (\r\n                <Form onFinish={handleSubmit} layout=\"vertical\">\r\n                    {values.cabs.map((cab, index) => (\r\n                      <div style={{display: \"flex\", flexWrap: \"wrap\", alignItems: \"flex-end\"}}>\r\n                          <div style={{width: \"calc(100% / 4 - 10px)\", marginRight: 10}}>\r\n                              <FieldInput label=\"Taxi name\"\r\n                                          name={`cabs.${index}.name`}\r\n                                          placeholder=\"Enter taxi name\"\r\n                                          required={true}/>\r\n                          </div>\r\n                          <div style={{width: \"calc(100% / 4 - 10px)\", marginRight: 10}}>\r\n                              <FieldInput label=\"Taxi phone number\"\r\n                                          name={`cabs.${index}.phone_number`}\r\n                                          placeholder=\"Enter taxi phone\"\r\n                                          required={true}/>\r\n                          </div>\r\n                      </div>\r\n                    ))}\r\n                    <Button variant=\"primary\" htmlType=\"submit\">Update</Button>\r\n                </Form>\r\n              )}\r\n      />\r\n    )\r\n}\r\n","/**\r\n * external libs\r\n */\r\nimport {Button, Form} from \"antd\";\r\nimport React from \"react\";\r\n/**\r\n * components\r\n */\r\nimport FieldInput from \"../../../../../../components/Form/FieldInput\";\r\nimport FieldTextarea from \"../../../../../../components/Form/FieldTextarea\";\r\nimport FormUI from \"../../../../../../components/Form\";\r\n/**\r\n * services\r\n */\r\nimport CityService from \"../../../../../../services/admin/city.service\";\r\n\r\n\r\nconst languages_list = [\r\n    {\r\n        id: 1,\r\n        lang_code: \"ru\",\r\n        name: \"Русский\"\r\n    },\r\n    {\r\n        id: 2,\r\n        lang_code: \"en\",\r\n        name: \"English\"\r\n    }\r\n];\r\n\r\nexport default function CreateCityLanguageForm({ cityId, getCity }) {\r\n    const createCityTranslate = async (value) => {\r\n        await CityService.createTranslate(cityId, {city_id: cityId, ...value})\r\n        await getCity(cityId)\r\n    };\r\n    \r\n    return (\r\n      <FormUI onSubmit={createCityTranslate}\r\n              initialValues={{\r\n                  languages: languages_list.map(lang => ({language_id: lang.id}))\r\n              }}\r\n              render={({handleSubmit}) => (\r\n                <Form onFinish={handleSubmit} layout=\"vertical\">\r\n                    <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                        {languages_list.map((lang, index) => (\r\n                          <div style={{width: `calc(100% / ${languages_list.length} - 10px)`}} key={lang.id}>\r\n                              <h4>{lang.name} - {lang.lang_code}</h4>\r\n                              <FieldInput label=\"City name\"\r\n                                          name={`languages[${index}].city_name`}\r\n                                          placeholder={`Enter city name (${lang.lang_code})`}\r\n                                          required={true}/>\r\n                              <FieldTextarea label=\"City description\"\r\n                                             name={`languages[${index}].city_description`}\r\n                                             placeholder={`Enter city description (${lang.lang_code})`}\r\n                                             required={true}/>\r\n                          </div>\r\n                        ))}\r\n                    </div>\r\n        \r\n                    <Button variant=\"primary\" htmlType=\"submit\" disabled={!cityId}>Create</Button>\r\n                </Form>\r\n              )}\r\n      />\r\n    )\r\n}\r\n","/**\r\n * external libs\r\n */\r\nimport {Button, Form} from \"antd\";\r\nimport React from \"react\";\r\n/**\r\n * components\r\n */\r\nimport FormUI from \"../../../../../../components/Form\";\r\nimport FieldInput from \"../../../../../../components/Form/FieldInput\";\r\nimport FieldTextarea from \"../../../../../../components/Form/FieldTextarea\";\r\n/**\r\n * services\r\n */\r\nimport CityService from \"../../../../../../services/admin/city.service\";\r\n\r\nconst languages_list = [\r\n    {\r\n        id: 1,\r\n        lang_code: \"ru\",\r\n        name: \"Русский\"\r\n    },\r\n    {\r\n        id: 2,\r\n        lang_code: \"en\",\r\n        name: \"English\"\r\n    }\r\n];\r\n\r\nexport default function UpdateCityLanguageForm({cityId, getCity, city}) {\r\n    const updateCityTranslate = async (value) => {\r\n        await CityService.updateTranslate(cityId, value.id, {city_id: cityId, ...value});\r\n        await getCity(cityId)\r\n    };\r\n    \r\n    console.log(city.languages, \"city.languages\")\r\n    \r\n    return (\r\n      <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n          {languages_list.map((lang) => (\r\n            <FormUI onSubmit={updateCityTranslate}\r\n                    initialValues={city.languages.reduce((accum, translate) => {\r\n                        if(translate.language.id === lang.id) {\r\n                            accum = {\r\n                                ...accum,\r\n                                id: translate.id,\r\n                                city_name: translate.city_name,\r\n                                city_description: translate.city_description,\r\n                            }\r\n                        }\r\n                        return accum\r\n                    }, {})}\r\n                    key={lang.id}\r\n                    render={({handleSubmit}) => (\r\n                      <Form onFinish={handleSubmit} layout=\"vertical\"\r\n                            style={{width: `calc(100% / ${languages_list.length} - 10px)`}}>\r\n                          <h4>{lang.name} - {lang.lang_code}</h4>\r\n                          <FieldInput label=\"City name\"\r\n                                      name=\"city_name\"\r\n                                      placeholder={`Enter city name (${lang.lang_code})`}\r\n                                      required={true}/>\r\n                          <FieldTextarea label=\"City description\"\r\n                                         name=\"city_description\"\r\n                                         placeholder={`Enter city description (${lang.lang_code})`}\r\n                                         required={true}/>\r\n                          <Button variant=\"primary\" htmlType=\"submit\">Update</Button>\r\n                      </Form>\r\n                    )}\r\n            />\r\n          ))}\r\n      </div>\r\n    )\r\n}\r\n","/**\r\n * external libs\r\n */\r\nimport {Button, Form} from \"antd\";\r\nimport React from \"react\";\r\n/**\r\n * components\r\n */\r\nimport FieldSelectCountry from \"../../../../../../components/Select/Country\";\r\nimport FieldInput from \"../../../../../../components/Form/FieldInput\";\r\nimport UploadFiles from \"../../../../../../components/UploadFiles\";\r\nimport FormUI from \"../../../../../../components/Form\";\r\n/**\r\n * services\r\n */\r\nimport CityService from \"../../../../../../services/admin/city.service\";\r\n\r\nexport default function UpdateCityForm({cityId, city, getCity}) {\r\n    const updateCity = async (value) => {\r\n        const copyValues = JSON.parse(JSON.stringify(value));\r\n        copyValues.files_ids = (copyValues.images || []).map(({id}) => id);\r\n        \r\n        await CityService.update(cityId, copyValues);\r\n        await getCity(cityId)\r\n    };\r\n    \r\n    return (\r\n      <FormUI onSubmit={updateCity}\r\n              initialValues={{\r\n                  country_id: +city.country.id,\r\n                  population: city.population,\r\n                  images: city.images\r\n              }}\r\n              render={({handleSubmit, submitting}) => (\r\n                <Form onFinish={handleSubmit} layout=\"vertical\">\r\n                    <div style={{display: \"flex\", flexWrap: \"wrap\", alignItems: \"flex-end\"}}>\r\n                        <div style={{width: \"calc(100% / 4 - 10px)\", marginRight: 10}}>\r\n                            <FieldSelectCountry name=\"country_id\"\r\n                                                required={true}\r\n                                                select={{\r\n                                                    showSearch: true,\r\n                                                }}/>\r\n                        </div>\r\n                        <div style={{width: \"calc(100% / 4 - 10px)\", marginRight: 10}}>\r\n                            <FieldInput label=\"Population\"\r\n                                        name=\"population\"\r\n                                        type=\"number\"\r\n                                        placeholder=\"Enter currency code (3 char)\"\r\n                                        required={true}/>\r\n                        </div>\r\n                    </div>\r\n                    <UploadFiles name=\"images\" fileName=\"images\"/>\r\n                    <Button variant=\"primary\" htmlType=\"submit\" disabled={submitting}>Update</Button>\r\n                </Form>\r\n              )}\r\n      />\r\n    )\r\n}\r\n","/**\r\n * external libs\r\n */\r\nimport React, {useEffect, useState} from 'react'\r\nimport {Link, useParams} from 'react-router-dom'\r\n/**\r\n * services\r\n */\r\nimport CityService from \"../../../../../services/admin/city.service\";\r\n/**\r\n * components\r\n */\r\nimport CabsCreateForm from '../components/Form/CabsCreate'\r\nimport CabsUpdateForm from '../components/Form/CabsUpdate'\r\nimport LanguageCreateForm from '../components/Form/LanguageCreate'\r\nimport LanguageUpdateForm from '../components/Form/LanguageUpdate'\r\nimport CityUpdateForm from '../components/Form/CityUpdate'\r\n/**\r\n * constants\r\n */\r\nimport {ADMIN_MAKE_SHOW_CITY_URI, ADMIN_MAKE_SHOW_COUNTRY_URI} from \"../../../../../constants/admin/uri.constant\";\r\n\r\n\r\nexport default function CityCreate() {\r\n    const [city, setCity] = useState(null)\r\n    const [isReady, setIsReady] = useState(false);\r\n    const {cityId} = useParams();\r\n    \r\n    const getCity = async () => {\r\n        setIsReady(false);\r\n        setCity(await CityService.show(cityId));\r\n        setIsReady(true);\r\n    };\r\n    \r\n    useEffect(() => {\r\n        getCity();\r\n    }, []);\r\n    \r\n    if(!isReady) {\r\n        return <div>Loader...</div>\r\n    }\r\n    \r\n    return (\r\n      <div>\r\n          <div style={{fontSize: 24, fontWeight: 800, marginBottom: 10}}>\r\n              <Link to={ADMIN_MAKE_SHOW_CITY_URI(cityId)}> {\"<-\"} Go to view city</Link>\r\n          </div>\r\n          <div style={{paddingBottom: 30}}>\r\n              <CityUpdateForm getCity={getCity} cityId={cityId} city={city}/>\r\n          </div>\r\n          {!!city.cabs.length && (\r\n            <div style={{paddingBottom: 30}}>\r\n                <CabsUpdateForm getCity={getCity} city={city} cityId={cityId}/>\r\n            </div>\r\n          )}\r\n          {!city.cabs.length && (\r\n            <div style={{paddingBottom: 30}}>\r\n                <CabsCreateForm getCity={getCity} cityId={cityId}/>\r\n            </div>\r\n          )}\r\n          {!!city.languages.length && (\r\n            <div style={{paddingBottom: 30}}>\r\n                <LanguageUpdateForm getCity={getCity} cityId={cityId} city={city}/>\r\n            </div>\r\n          )}\r\n          {!city.languages.length && (\r\n            <div style={{paddingBottom: 30}}>\r\n                <LanguageCreateForm getCity={getCity} cityId={cityId}/>\r\n            </div>\r\n          )}\r\n      </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}