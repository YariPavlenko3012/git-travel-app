{"version":3,"sources":["components/Form/components/FormItem.jsx","components/Form/index.jsx","components/Form/FieldInput.jsx","pages/admin/pages/Users/Create/index.jsx"],"names":["FormItem","label","name","children","hidden","props","Item","validateStatus","meta","error","submitError","touched","help","FormUI","render","onSubmit","onError","useContext","AlertContext","setAlertError","onSubmitForm","values","message","errors","console","Object","keys","reduce","newError","splitKey","split","helpString","forEach","key","eval","mutators","arrayMutators","clear","state","field","changeValue","setValue","value","FieldInput","placeholder","type","disabled","onBlur","onChange","onPaste","input","rest","Components","Input","Password","Fragment","e","target","clipboardData","getData","size","CreateCityForm","countryId","useHistory","createUser","handleSubmit","submitting","onFinish","layout","style","display","flexWrap","alignItems","width","marginRight","required","variant","htmlType"],"mappings":"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","file":"static/js/34.1837069a.chunk.js","sourcesContent":["import {Form} from \"antd\";\nimport React from \"react\";\n\nexport default function FormItem({ label, name, children, hidden, ...props }) {\n    return (\n        <Form.Item label={label || \"\"}\n                   name={name}\n                   validateStatus={(props.meta.error || props.meta.submitError) && props.meta.touched ? \"error\" : false}\n                   help={(props.meta.error || props.meta.submitError) && props.meta.touched ? props.meta.error || props.meta.submitError : false}\n                   hidden={hidden}>\n            {children}\n        </Form.Item>\n    )\n}\n","import React, {useContext} from \"react\";\nimport {Form} from \"react-final-form\";\nimport arrayMutators from 'final-form-arrays'\nimport {AlertContext} from \"../../pages/context/alert.context\";\n\nexport default function FormUI({render, onSubmit = () => {} , onError = () => {}, ...props}) {\n    const {setAlertError} = useContext(AlertContext)\n\n    const onSubmitForm = async (values) => {\n        try {\n            await onSubmit(values);\n        } catch (e) {\n            setAlertError(e.message);\n        \n            if(!e.errors){\n                return console.error(e.message)\n            }\n            onError();\n        \n        \n            return Object.keys(e.errors).reduce((newError, keys) => {\n                const splitKey = keys.split('.');\n                const error = typeof e.errors[keys] === 'string' ? e.errors[keys] : e.errors[keys][0];\n            \n                let helpString = 'newError';\n                splitKey.forEach( key => {\n                    helpString += `['${key}']`;\n                    if(!eval(`${helpString}`)){\n                        eval(`${helpString} = {}`);\n                    }\n                });\n            \n                eval(`${helpString} = \"${error}\"`);\n            \n                return newError\n            }, {});\n        }\n    }\n\n    return (\n        <Form onSubmit={onSubmitForm}\n              mutators={{\n                  ...arrayMutators,\n                  clear: ([field], state, {changeValue}) => {\n                      changeValue(state, field, () => undefined);\n                  },\n                  setValue: ([field, value], state, {changeValue}) => {\n                      changeValue(state, field, () => value)\n                  }\n              }}\n              render={render}\n              {...props}\n        />\n    )\n}\n","/**\n * external libs\n */\nimport {Field} from \"react-final-form\";\nimport React from \"react\";\nimport {Input} from 'antd'\n/**\n * components\n */\nimport FormItem from './components/FormItem'\n\nexport default function FieldInput({label = \"\", name, placeholder = \"\", type = \"text\", disabled = false, onBlur, onChange, onPaste, input, ...rest}) {\n    const Components = type === 'password' ? Input.Password : Input;\n\n    return (\n        <Field name={name}>\n            {props => (\n                <FormItem label={label} name={name} {...props} {...rest}>\n                    <React.Fragment>\n                        <Components placeholder={placeholder}\n                                    onChange={(e) => {\n                                        if(onChange){\n                                            onChange(e.target.value)\n                                        }\n\n                                        props.input.onChange(e)\n                                    }}\n                                    onPaste={e => {\n                                        if(onPaste){\n                                            onPaste(e.clipboardData.getData('Text'))\n                                        }\n                                    }}\n                                    onBlur={(e) => {\n                                        if(onBlur) {\n                                            onBlur(e)\n                                        }\n                                        props.input.onBlur(e);\n                                    }}\n                                    disabled={disabled}\n                                    name={name}\n                                    type={type}\n                                    value={props.input.value}\n                                    size=\"large\"\n                                    {...input}\n                                    {...props} />\n                    </React.Fragment>\n                </FormItem>\n            )}\n        </Field>\n    )\n}\n","/**\n * external libs\n */\nimport {Button, Form} from \"antd\";\nimport React from \"react\";\nimport {useHistory} from 'react-router-dom'\n/**\n * components\n */\nimport FieldInput from \"../../../../../components/Form/FieldInput\";\nimport FormUI from \"../../../../../components/Form\";\n\nexport default function CreateCityForm({countryId}) {\n    const history = useHistory();\n\n    const createUser = async (value) => {\n\n    };\n\n    return (\n        <FormUI onSubmit={createUser}\n                render={({handleSubmit, submitting}) => (\n                    <Form onFinish={handleSubmit} layout=\"vertical\">\n                        <div style={{display: \"flex\", flexWrap: \"wrap\", alignItems: \"flex-end\"}}>\n                            <div style={{width: \"calc(100% / 4 - 10px)\", marginRight: 10}}>\n                                <FieldInput label=\"Login\"\n                                            name=\"login\"\n                                            placeholder=\"Enter login\"\n                                            required={true}/>\n                            </div>\n                            <div style={{width: \"calc(100% / 4 - 10px)\", marginRight: 10}}>\n                                <FieldInput label=\"Email\"\n                                            name=\"email\"\n                                            placeholder=\"Enter email\"\n                                            required={true}/>\n                            </div>\n                            <div style={{width: \"calc(100% / 4 - 10px)\", marginRight: 10}}>\n                                <FieldInput label=\"Password\"\n                                            name=\"password\"\n                                            placeholder=\"Enter password\"\n                                            required={true}/>\n                            </div>\n                            <div style={{width: \"calc(100% / 4 - 10px)\", marginRight: 10}}>\n                                <FieldInput label=\"Confirm password\"\n                                            name=\"confirm_password\"\n                                            placeholder=\"Enter confirm password\"\n                                            required={true}/>\n                            </div>\n                        </div>\n                        <Button variant=\"primary\" htmlType=\"submit\" disabled={submitting}>Create</Button>\n                    </Form>\n                )}\n        />\n    )\n}\n"],"sourceRoot":""}