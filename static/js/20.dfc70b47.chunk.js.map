{"version":3,"sources":["model/language.model.js","constants/admin/api.constant.js","utils/Querystring.js","model/media.model.js","components/Form/components/FormItem.jsx","model/City/cabs.model.js","model/City/language.model.js","model/City/city.model.js","model/currency.model.js","model/Country/language.model.js","model/Country/country.model.js","components/Form/index.jsx","components/Form/FieldInput.jsx","services/admin/city.service.js","components/Form/FieldSelect.jsx","utils/Select.js","services/dictionary.service.js","components/UploadFiles/index.module.scss","components/Form/FieldTextarea.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","services/files.service.js","components/UploadFiles/index.jsx","components/Select/Country.js","pages/admin/pages/City/components/Form/CabsCreate.jsx","pages/admin/pages/City/components/Form/CabsUpdate.jsx","pages/admin/pages/City/components/Form/LanguageUpdate.jsx","pages/admin/pages/City/components/Form/CityUpdate.jsx","pages/admin/pages/City/Edit/index.jsx"],"names":["LanguageModel","data","this","id","name","lang_code","ADMIN","ADMIN_COUNTRY","API_ADMIN_COUNTRY_LIST","API_ADMIN_COUNTRY_CREATE","API_MAKE_ADMIN_COUNTRY_UPDATE","countryId","API_MAKE_ADMIN_COUNTRY_DELETE","API_MAKE_ADMIN_COUNTRY_SHOW","API_MAKE_ADMIN_COUNTRY_TRANSLATE_CREATE","API_MAKE_ADMIN_COUNTRY_TRANSLATE_EDIT","translateId","ADMIN_SIGHT","API_ADMIN_SIGHT_LIST","API_ADMIN_SIGHT_CREATE","API_MAKE_ADMIN_SIGHT_UPDATE","sightId","API_MAKE_ADMIN_SIGHT_DELETE","API_MAKE_ADMIN_SIGHT_SHOW","API_MAKE_ADMIN_SIGHT_TRANSLATE_CREATE","API_MAKE_ADMIN_SIGHT_TRANSLATE_EDIT","ADMIN_CITY","API_ADMIN_CITY_LIST","API_ADMIN_CITY_CREATE","API_MAKE_ADMIN_CITY_EDIT","cityId","API_MAKE_ADMIN_CITY_SHOW","API_MAKE_ADMIN_CITY_CHANGE_STATUS","API_MAKE_ADMIN_CITY_TRANSLATE_EDIT","API_MAKE_ADMIN_CITY_TAXI_CREATE","API_MAKE_ADMIN_CITY_TAXI_EDIT","cabId","ADMIN_LANGUAGE","API_ADMIN_LANGUAGE_LIST","API_ADMIN_LANGUAGE_CREATE","API_MAKE_ADMIN_CITY_LANGUAGE_DELETE","languageId","API_MAKE_ADMIN_LANGUAGE_SHOW","API_MAKE_ADMIN_LANGUAGE_UPDATE","ADMIN_CURRENCY","API_ADMIN_CURRENCY_LIST","API_ADMIN_CURRENCY_CREATE","API_MAKE_ADMIN_CITY_CURRENCY_DELETE","currencyId","API_MAKE_ADMIN_CURRENCY_SHOW","API_MAKE_ADMIN_CURRENCY_UPDATE","DICTIONARY","API_DICTIONARY_COUNTRIES_URL","API_DICTIONARY_CITIES_URL","API_DICTIONARY_LANGUAGES_URL","API_DICTIONARY_CURRENCIES_URL","QueryString","obj","qs","stringify","encode","queryString","parse","slice","MediaModel","path","FormItem","label","children","hidden","props","Item","validateStatus","meta","error","submitError","touched","help","CabModel","trim","phone_number","CityLanguageModel","city_description","city_name","language","CityModel","description","country","CountryModel","languages","map","images","image","population","cabs","cab","CurrencyModel","currency_code","CountryLanguageModel","country_description","country_name","country_code_in_iso_3166_1_format","official_language","capital","currency","ambulance_number","has_seas","has_mountains","happiness_rating","highest_point","country_area","safety_index","FormUI","render","onSubmit","onError","useContext","AlertContext","setAlertError","onSubmitForm","values","message","errors","console","Object","keys","reduce","newError","splitKey","split","helpString","forEach","key","eval","mutators","arrayMutators","clear","state","field","changeValue","setValue","value","FieldInput","placeholder","type","disabled","onBlur","input","rest","Components","Input","Password","Fragment","onChange","e","size","CityService","params","axios","get","paramsSerializer","cityList","city","post","put","workStatus","work_status","FieldSelect","options","select","defaultValue","style","minWidth","val","Select","item","accum","prev","DictionaryService","module","exports","TextArea","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","FilesService","delete","UploadFiles","fileName","length","useForm","useFormState","submitErrors","setAlertSuccess","useState","inProp","setInProp","previewFiles","setPreviewFiles","setImageValue","imgId","onDelete","deletedFile","files_ids","newFiles","filter","file","files","target","formData","FormData","i","append","upload","then","fileLists","newPreviewFileList","className","marginBottom","styles","download__btn_wrapper","download__btn","onClick","download__btn_actions","multiple","src","alt","download__btn_download","overflow","download__preview","download__preview_wrapper","download__preview_img","download__preview_delete","viewBox","focusable","data-icon","width","height","fill","aria-hidden","d","FieldSelectCountry","searchParams","countryOptions","setCountryOptions","getCountryOptions","countries","optionsByRow","useEffect","CreateCityCabsForm","getCity","createCityTaxi","createTaxi","city_id","Form","handleSubmit","submitting","onFinish","layout","display","flexWrap","alignItems","marginRight","required","variant","htmlType","UpdateCityCabsForm","updateCityTaxi","Promise","all","updateTaxi","initialValues","index","languages_list","UpdateCityLanguageForm","updateCityTranslate","log","updateTranslate","justifyContent","lang","translate","FieldTextarea","UpdateCityForm","updateCity","copyValues","JSON","update","country_id","showSearch","CityCreate","setCity","isReady","setIsReady","useParams","show","fontSize","fontWeight","to","ADMIN_MAKE_SHOW_CITY_URI","paddingBottom"],"mappings":"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","file":"static/js/20.dfc70b47.chunk.js","sourcesContent":["export default class LanguageModel {\n    constructor(data = {}) {\n        this.id = data.id;\n        this.name = data.name;\n        this.lang_code = data.lang_code;\n    }\n}\n","export const API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nconst REQUEST_VERSION = \"/v1\";\n\nconst ADMIN = `${REQUEST_VERSION}/admin`;\n\nconst ADMIN_COUNTRY = `${ADMIN}/countries`;\nexport const API_ADMIN_COUNTRY_LIST = `${ADMIN_COUNTRY}`;\nexport const API_ADMIN_COUNTRY_CREATE = `${ADMIN_COUNTRY}`;\nexport const API_MAKE_ADMIN_COUNTRY_UPDATE = countryId => `${ADMIN_COUNTRY}/${countryId}`;\nexport const API_MAKE_ADMIN_COUNTRY_DELETE = countryId => `${ADMIN_COUNTRY}/${countryId}`;\nexport const API_MAKE_ADMIN_COUNTRY_SHOW = countryId => `${ADMIN_COUNTRY}/${countryId}`;\nexport const API_MAKE_ADMIN_COUNTRY_TRANSLATE_CREATE = countryId =>  `${ADMIN_COUNTRY}/${countryId}/languages`;\nexport const API_MAKE_ADMIN_COUNTRY_TRANSLATE_EDIT = (countryId, translateId) => `${ADMIN_COUNTRY}/${countryId}/languages/${translateId}`;\n\nconst ADMIN_SIGHT = `${ADMIN}/sights`;\nexport const API_ADMIN_SIGHT_LIST = `${ADMIN_SIGHT}`;\nexport const API_ADMIN_SIGHT_CREATE = `${ADMIN_SIGHT}`;\nexport const API_MAKE_ADMIN_SIGHT_UPDATE = sightId => `${ADMIN_SIGHT}/${sightId}`;\nexport const API_MAKE_ADMIN_SIGHT_DELETE = sightId => `${ADMIN_SIGHT}/${sightId}`;\nexport const API_MAKE_ADMIN_SIGHT_SHOW = sightId => `${ADMIN_SIGHT}/${sightId}`;\nexport const API_MAKE_ADMIN_SIGHT_TRANSLATE_CREATE = sightId => `${ADMIN_SIGHT}/${sightId}/languages`;\nexport const API_MAKE_ADMIN_SIGHT_TRANSLATE_EDIT = (sightId, translateId) => `${ADMIN_SIGHT}/${sightId}/languages/${translateId}`;\n\nconst ADMIN_CITY = `${ADMIN}/cities`;\nexport const API_ADMIN_CITY_LIST = `${ADMIN_CITY}`;\nexport const API_ADMIN_CITY_CREATE = `${ADMIN_CITY}`;\nexport const API_MAKE_ADMIN_CITY_EDIT = cityId => `${ADMIN_CITY}/${cityId}`;\nexport const API_MAKE_ADMIN_CITY_SHOW = cityId => `${ADMIN_CITY}/${cityId}`;\nexport const API_MAKE_ADMIN_CITY_CHANGE_STATUS = cityId => `${ADMIN_CITY}/${cityId}/change-status`;\nexport const API_MAKE_ADMIN_CITY_TRANSLATE_CREATE = cityId =>`${ADMIN_CITY}/${cityId}/languages`;\nexport const API_MAKE_ADMIN_CITY_TRANSLATE_EDIT = (cityId, translateId) => `${ADMIN_CITY}/${cityId}/languages/${translateId}`;\nexport const API_MAKE_ADMIN_CITY_TAXI_CREATE = cityId => `${ADMIN_CITY}/${cityId}/cabs`;\nexport const API_MAKE_ADMIN_CITY_TAXI_EDIT = (cityId, cabId) => `${ADMIN_CITY}/${cityId}/cabs/${cabId}`;\n\n\nconst ADMIN_LANGUAGE = `${ADMIN}/languages`;\nexport const API_ADMIN_LANGUAGE_LIST = `${ADMIN_LANGUAGE}`;\nexport const API_ADMIN_LANGUAGE_CREATE = `${ADMIN_LANGUAGE}`;\nexport const API_MAKE_ADMIN_CITY_LANGUAGE_DELETE = languageId => `${ADMIN_LANGUAGE}/${languageId}`;\nexport const API_MAKE_ADMIN_LANGUAGE_SHOW = languageId => `${ADMIN_LANGUAGE}/${languageId}`;\nexport const API_MAKE_ADMIN_LANGUAGE_UPDATE = languageId => `${ADMIN_LANGUAGE}/${languageId}`;\n\nconst ADMIN_CURRENCY = `${ADMIN}/currencies`;\nexport const API_ADMIN_CURRENCY_LIST = `${ADMIN_CURRENCY}`;\nexport const API_ADMIN_CURRENCY_CREATE = `${ADMIN_CURRENCY}`;\nexport const API_MAKE_ADMIN_CITY_CURRENCY_DELETE = currencyId => `${ADMIN_CURRENCY}/${currencyId}`;\nexport const API_MAKE_ADMIN_CURRENCY_SHOW = currencyId => `${ADMIN_CURRENCY}/${currencyId}`;\nexport const API_MAKE_ADMIN_CURRENCY_UPDATE = currencyId => `${ADMIN_CURRENCY}/${currencyId}`;\n\n//DICTIONARY\nconst DICTIONARY = `${ADMIN}/dictionary`;\nexport const API_DICTIONARY_COUNTRIES_URL = `${DICTIONARY}/countries`;\nexport const API_DICTIONARY_CITIES_URL = `${DICTIONARY}/cities`;\nexport const API_DICTIONARY_LANGUAGES_URL = `${DICTIONARY}/languages`;\nexport const API_DICTIONARY_CURRENCIES_URL = `${DICTIONARY}/currencies`;\n","import qs from 'qs'\n\n\nexport class QueryString {\n    static stringify(obj) {\n        return qs.stringify(obj, { encode: false })\n    }\n    \n    static parseQueryString(queryString) {\n        return qs.parse(queryString.slice(1))\n    }\n}\n","export default class MediaModel {\n    constructor(data = {}) {\n        this.id = data.id;\n        this.path = data.path;\n    }\n}\n","import {Form} from \"antd\";\nimport React from \"react\";\n\nexport default function FormItem({ label, name, children, hidden, ...props }) {\n    return (\n        <Form.Item label={label || \"\"}\n                   name={name}\n                   validateStatus={(props.meta.error || props.meta.submitError) && props.meta.touched ? \"error\" : false}\n                   help={(props.meta.error || props.meta.submitError) && props.meta.touched ? props.meta.error || props.meta.submitError : false}\n                   hidden={hidden}>\n            {children}\n        </Form.Item>\n    )\n}\n","export default class CabModel {\n    constructor(data = {}) {\n        this.id =  data.id;\n        this.name = data.name.trim();\n        this.phone_number = data.phone_number.trim();\n    }\n}\n","import LanguageModel from \"../language.model\";\n\nexport default class CityLanguageModel {\n    constructor(data = {}) {\n        this.city_description = data.city_description;\n        this.city_name = data.city_name;\n        this.id = data.id;\n        this.language = new LanguageModel(data.language);\n    }\n}\n","import MediaModel from '../media.model'\nimport CabModel from \"./cabs.model\";\nimport CityLanguageModel from \"./language.model\";\nimport CountryModel from \"../Country/country.model\";\n\nexport default class CityModel {\n    constructor(data = {}) {\n        this.id = data.id;\n        this.name = data.name;\n        this.description = data.description;\n        this.country = new CountryModel(data.country);\n        this.languages = (data.languages || []).map( language => new CityLanguageModel(language));\n        this.images = (data.images || []).map( image => new MediaModel(image));\n        this.population = data.population;\n        this.cabs = (data.cabs || []).map( cab => new CabModel(cab));\n    }\n}\n","export default class CurrencyModel {\n    constructor(data = {}) {\n        this.id = data.id;\n        this.currency_code = data.currency_code;\n    }\n}\n","import LanguageModel from \"../language.model\";\n\nexport default class CountryLanguageModel {\n    constructor(data = {}) {\n        this.country_description = data.country_description;\n        this.country_name = data.country_name;\n        this.id = data.id;\n        this.language = new LanguageModel(data.language);\n    }\n};\n","import CityModel from '../City/city.model'\nimport MediaModel from \"../media.model\";\nimport CurrencyModel from \"../currency.model\";\nimport LanguageModel from \"../language.model\";\nimport CountryLanguageModel from \"./language.model\";\n\nexport default class CountryModel {\n    constructor(data = {}) {\n        this.id = data.id;\n        this.country_code_in_iso_3166_1_format = data.country_code_in_iso_3166_1_format;\n        this.population = data.population;\n        this.official_language = new LanguageModel(data.official_language);\n        this.capital = data.capital ? new CityModel(data.capital) : null;\n        this.currency = new CurrencyModel(data.currency);\n        this.name = data.name;\n        this.languages = (data.languages || []).map( language => new CountryLanguageModel(language));\n        this.description = data.description;\n        this.ambulance_number = data.ambulance_number;\n        this.has_seas = data.has_seas;\n        this.has_mountains = data.has_mountains;\n        this.happiness_rating = data.happiness_rating;\n        this.highest_point = data.highest_point;\n        this.country_area = data.country_area;\n        this.safety_index = data.safety_index;\n        this.images = (data.images || []).map( image => new MediaModel(image));\n    }\n};\n","import React, {useContext} from \"react\";\nimport {Form} from \"react-final-form\";\nimport arrayMutators from 'final-form-arrays'\nimport {AlertContext} from \"../../pages/context/alert.context\";\n\nexport default function FormUI({render, onSubmit = () => {} , onError = () => {}, ...props}) {\n    const {setAlertError} = useContext(AlertContext)\n\n    const onSubmitForm = async (values) => {\n        try {\n            await onSubmit(values);\n        } catch (e) {\n            setAlertError(e.message);\n        \n            if(!e.errors){\n                return console.error(e.message)\n            }\n            onError();\n        \n        \n            return Object.keys(e.errors).reduce((newError, keys) => {\n                const splitKey = keys.split('.');\n                const error = typeof e.errors[keys] === 'string' ? e.errors[keys] : e.errors[keys][0];\n            \n                let helpString = 'newError';\n                splitKey.forEach( key => {\n                    helpString += `['${key}']`;\n                    if(!eval(`${helpString}`)){\n                        eval(`${helpString} = {}`);\n                    }\n                });\n            \n                eval(`${helpString} = \"${error}\"`);\n            \n                return newError\n            }, {});\n        }\n    }\n\n    return (\n        <Form onSubmit={onSubmitForm}\n              mutators={{\n                  ...arrayMutators,\n                  clear: ([field], state, {changeValue}) => {\n                      changeValue(state, field, () => undefined);\n                  },\n                  setValue: ([field, value], state, {changeValue}) => {\n                      changeValue(state, field, () => value)\n                  }\n              }}\n              render={render}\n              {...props}\n        />\n    )\n}\n","/**\n * external libs\n */\nimport {Field} from \"react-final-form\";\nimport React from \"react\";\nimport {Input} from 'antd'\n/**\n * components\n */\nimport FormItem from './components/FormItem'\n\nexport default function FieldInput({label = \"\", name, placeholder = \"\", type = \"text\", disabled = false, onBlur, input, ...rest}) {\n    const Components = type === 'password' ? Input.Password : Input;\n\n    return (\n        <Field name={name}>\n            {props => (\n                <FormItem label={label} name={name} {...props} {...rest}>\n                    <React.Fragment>\n                        <Components placeholder={placeholder}\n                                    onChange={props.input.onChange}\n                                    onBlur={(e) => {\n                                        if(onBlur) {\n                                            onBlur(e)\n                                        }\n                                        props.input.onBlur(e);\n                                    }}\n                                    disabled={disabled}\n                                    name={name}\n                                    type={type}\n                                    value={props.input.value}\n                                    size=\"large\"\n                                    {...input}\n                                    {...props} />\n                    </React.Fragment>\n                </FormItem>\n            )}\n        </Field>\n    )\n}\n","/**\n *service\n */\nimport axios from 'axios'\n/**\n * const\n */\nimport {\n    API_ADMIN_CITY_CREATE,\n    API_MAKE_ADMIN_CITY_TRANSLATE_CREATE,\n    API_ADMIN_CITY_LIST,\n    API_MAKE_ADMIN_CITY_TAXI_CREATE,\n    API_MAKE_ADMIN_CITY_SHOW,\n    API_MAKE_ADMIN_CITY_EDIT,\n    API_MAKE_ADMIN_CITY_TAXI_EDIT,\n    API_MAKE_ADMIN_CITY_TRANSLATE_EDIT,\n    API_MAKE_ADMIN_CITY_CHANGE_STATUS,\n} from \"../../constants/admin/api.constant\";\n/**\n * utils\n */\nimport {QueryString} from \"../../utils/Querystring\";\n/**\n * model\n */\nimport CityModel from \"../../model/City/city.model\";\n\nexport default class CityService {\n    static async list(params) {\n        let cityList = await axios.get(API_ADMIN_CITY_LIST, {\n            params,\n            paramsSerializer: params => {\n                return QueryString.stringify(params)\n            }\n        });\n\n        cityList.data = cityList.data.map(city => new CityModel(city));\n\n        return cityList;\n    }\n\n    static async show(cityId) {\n        return new CityModel(await axios.get(API_MAKE_ADMIN_CITY_SHOW(cityId)));\n    }\n\n    static async create(data) {\n        return new CityModel(await axios.post(API_ADMIN_CITY_CREATE, data));\n    }\n\n    static async update(cityId, data) {\n        return new CityModel(await axios.put(API_MAKE_ADMIN_CITY_EDIT(cityId), data));\n    }\n\n    static async createTaxi(cityId, data) {\n        return await axios.post(API_MAKE_ADMIN_CITY_TAXI_CREATE(cityId), data);\n    }\n\n    static async updateTaxi(cityId, cabId, data) {\n        return await axios.put(API_MAKE_ADMIN_CITY_TAXI_EDIT(cityId, cabId), data);\n    }\n\n    static async updateTranslate(cityId, translateId, data) {\n        return await axios.put(API_MAKE_ADMIN_CITY_TRANSLATE_EDIT(cityId, translateId), data);\n    }\n\n    static async updateWorkStatus(cityId, workStatus) {\n        return await axios.put(API_MAKE_ADMIN_CITY_CHANGE_STATUS(cityId), {work_status: workStatus});\n    }\n}\n\n","/**\n * external libs\n */\nimport {Field} from \"react-final-form\";\nimport React from \"react\";\nimport {Select} from \"antd\";\n/**\n * components\n */\nimport FormItem from './components/FormItem'\n\n\nexport default function FieldSelect({label, name, options, select, placeholder, defaultValue, disabled, onChange, ...rest}) {\n    \n    return (\n      <Field name={name}>\n          {props => (\n            <FormItem label={label} name={name} {...props} {...rest}>\n                <React.Fragment>\n                    <Select\n                      size=\"large\"\n                      {...select}\n                      value={props.input.value || defaultValue || []}\n                      placeholder={placeholder}\n                      options={options}\n                      disabled={disabled}\n                      style={{minWidth: \"100%\"}}\n                      onChange={(val) => {\n                          if(onChange) {\n                              onChange(val)\n                          }\n                          props.input.onChange(val)\n                      }}\n                    />\n                </React.Fragment>\n            </FormItem>\n          )}\n      </Field>\n    \n    )\n}\n","export default class Select {\n    static optionsByRow (data, value, label) {\n        return data.map( item => ({\n            label: label.split('.').reduce((accum, prev) => accum[prev], item),\n            value: value.split('.').reduce((accum, prev) => accum[prev], item)\n        }))\n    }\n}\n\n","/**\n *service\n */\nimport axios from 'axios'\n/**\n * const\n */\nimport {\n    API_DICTIONARY_CITIES_URL,\n    API_DICTIONARY_COUNTRIES_URL,\n    API_DICTIONARY_CURRENCIES_URL,\n    API_DICTIONARY_LANGUAGES_URL,\n} from \"../constants/admin/api.constant\";\n/**\n * utils\n */\nimport {QueryString} from \"../utils/Querystring\";\n\nexport default class DictionaryService {\n    static async countries(params = {}) {\n        return await axios.get(API_DICTIONARY_COUNTRIES_URL, {\n            params,\n            paramsSerializer: params => {\n                return QueryString.stringify(params)\n            }\n        });\n    }\n    \n    static async cities(params = {}) {\n        return await axios.get(API_DICTIONARY_CITIES_URL, {\n            params,\n            paramsSerializer: params => {\n                return QueryString.stringify(params)\n            }\n        });\n    }\n    \n    static async languages() {\n        return await axios.get(API_DICTIONARY_LANGUAGES_URL);\n    }\n    \n    static async currencies() {\n        return await axios.get(API_DICTIONARY_CURRENCIES_URL);\n    }\n}\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"download__btn\":\"UploadFiles_download__btn__YKUtp\",\"download__btn_wrapper\":\"UploadFiles_download__btn_wrapper__1VJ3H\",\"error\":\"UploadFiles_error__19Mf-\",\"download__btn_ico\":\"UploadFiles_download__btn_ico__3bQjs\",\"download__btn_actions\":\"UploadFiles_download__btn_actions__2XUL-\",\"download__preview\":\"UploadFiles_download__preview__1BqBW\",\"download__preview_wrapper\":\"UploadFiles_download__preview_wrapper__3j7WW\",\"download__preview_img\":\"UploadFiles_download__preview_img__2lJ82\",\"download__preview_delete\":\"UploadFiles_download__preview_delete__3gVKC\"};","/**\n * external libs\n */\nimport {Field} from \"react-final-form\";\nimport React from \"react\";\nimport {Input} from 'antd'\n/**\n * components\n */\nimport FormItem from './components/FormItem'\n\nexport default function FieldInput({label = \"\", name, placeholder = \"\", disabled = false, onBlur, input, ...rest}) {\n    return (\n        <Field name={name}>\n            {props => (\n                <FormItem label={label} name={name} {...props} {...rest}>\n                    <React.Fragment>\n                        <Input.TextArea placeholder={placeholder}\n                                        onChange={props.input.onChange}\n                                        onBlur={(e) => {\n                                            if(onBlur) {\n                                                onBlur(e)\n                                            }\n                                            props.input.onBlur(e);\n                                        }}\n                                        disabled={disabled}\n                                        name={name}\n                                        value={props.input.value}\n                                        size=\"large\"\n                                        {...input}\n                                        {...props} />\n                    </React.Fragment>\n                </FormItem>\n            )}\n        </Field>\n    )\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/**\n *service\n */\nimport axios from 'axios'\n/**\n * const\n */\nimport {\n    API_MAKE_ACCOUNT_USER_INFO_URL,\n} from \"../constants/api.constant\";\nimport {API_ADMIN_CITY_LIST} from \"../constants/admin/api.constant\";\nimport {QueryString} from \"../utils/Querystring\";\nexport default class FilesService {\n    static async upload(data) {\n        return await axios.post(\"/v1/files\", data)\n    }\n    \n    static async delete(data) {\n        return await axios.delete(\"/v1/files\", {\n            params: data,\n            paramsSerializer: params => {\n                return QueryString.stringify(params)\n            }\n        })\n    }\n}\n\n","/**\n * external libs\n */\nimport {SlideDown} from 'react-slidedown/lib/slidedown'\nimport React, {useContext, useState} from \"react\";\nimport {Field, useForm, useFormState} from \"react-final-form\";\n/**\n * context\n */\nimport {AlertContext} from \"../../pages/context/alert.context\";\n/**\n * styles\n */\nimport styles from './index.module.scss';\nimport FilesService from \"../../services/files.service\";\n\nexport default function UploadFiles({name, fileName}) {\n    const key = name.split(\".\")[name.split(\".\").length - 1];\n    const {mutators: {setValue}} = useForm();\n    const {submitErrors, values} = useFormState();\n    const {setAlertSuccess} = useContext(AlertContext);\n    const [inProp, setInProp] = useState(false  );\n    const [previewFiles, setPreviewFiles] = useState( values[name] || []);\n\n    const setImageValue = (name, imgId) => {\n        setValue(name, imgId)\n    };\n    \n    const onDelete = async (deletedFile) => {\n        await FilesService.delete({files_ids: [deletedFile.id]})\n        const newFiles = previewFiles.filter(file => file.id !== deletedFile.id);\n        setPreviewFiles(newFiles);\n        setImageValue(name, newFiles);\n    };\n    \n    const onChange = async (e) => {\n        const {files} = e.target;\n        \n        const formData = new FormData;\n    \n        for (let i = 0; i < files.length; i++){\n            formData.append(\"files[]\", files[i]);\n        }\n    \n        FilesService.upload(formData)\n        .then(fileLists => {\n            let newPreviewFileList = [];\n    \n            fileLists.forEach( file => {\n                newPreviewFileList = [...newPreviewFileList, file];\n            });\n    \n            setAlertSuccess(\"Files successfully uploaded\");\n            setPreviewFiles([...newPreviewFileList, ...previewFiles]);\n            setImageValue(name, [...newPreviewFileList, ...previewFiles]);\n            setInProp(true)\n        })\n    }\n    \n    return (\n        <Field name=\"file\">\n            {props => (\n                <div className=\"preview-img\" style={{marginBottom: \"1rem\"}}>\n                    <div className={styles.download__btn_wrapper}>\n                        <div className={`${styles.download__btn} ${submitErrors?.[key] ? styles.error : \"\"}`} onClick={() => setInProp(!inProp)}>\n                            <div>\n                                Upload {fileName}\n                            </div>\n                        </div>\n                        <label className={styles.download__btn_actions}>\n                            <input name=\"myFile\" type=\"file\" hidden={true} multiple={true} onChange={onChange}/>\n                            <img src=\"/git-travel-app/img/download.svg\" alt=\"download\"\n                                 className={styles.download__btn_download}/>\n                        </label>\n                    </div>\n                    <SlideDown className={'my-dropdown-slidedown'}>\n                        {inProp && (\n                          <div style={{ overflow: \"hidden\"}}>\n                              <div className={styles.download__preview}>\n                                  {previewFiles.map( file => (\n                                    <div className={styles.download__preview_wrapper}>\n                                        <img className={styles.download__preview_img} src={file.path} alt=\"image\"/>\n                                        <div className={styles.download__preview_delete} onClick={() => onDelete(file)}>\n                                            <svg viewBox=\"64 64 896 896\" focusable=\"false\" data-icon=\"delete\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\"><path d=\"M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z\" fill={\"red\"}></path></svg>\n                                        </div>\n                                    </div>\n                                  ))}\n                              </div>\n                          </div>\n                        )}\n                    </SlideDown>\n                    \n                </div>\n            )}\n        </Field>\n    )\n}\n","/**\n * external libs\n */\nimport React, {useEffect, useState} from \"react\";\n/**\n * components\n */\nimport FieldSelect from \"../Form/FieldSelect\";\n/**\n * utils\n */\nimport Select from \"../../utils/Select\";\n/**\n * services\n */\nimport DictionaryService from \"../../services/dictionary.service\";\n\n\nexport default function FieldSelectCountry({label = true, name, select, onChange, searchParams = {}, disabled = false, data = null, ...rest}) {\n    const [countryOptions, setCountryOptions] = useState([]);\n\n    const getCountryOptions = async () => {\n        setCountryOptions(data || Select.optionsByRow(await DictionaryService.countries(searchParams), \"id\", \"name\"))\n    };\n\n    useEffect(() => {\n        getCountryOptions();\n    }, []);\n\n    return (\n        <FieldSelect {...rest}\n                     label={label ? \"Country\" : \"\"}\n                     name={name}\n                     select={select}\n                     onChange={onChange}\n                     options={countryOptions}\n                     placeholder=\"Select country\"\n                     disabled={disabled}/>\n    )\n}\n","/**\n * external libs\n */\nimport {Button, Form} from \"antd\";\nimport React from \"react\";\n/**\n * components\n */\nimport FieldInput from \"../../../../../../components/Form/FieldInput\";\nimport FormUI from \"../../../../../../components/Form\";\n/**\n * services\n */\nimport CityService from \"../../../../../../services/admin/city.service\";\n\nexport default function CreateCityCabsForm({ cityId, getCity }) {\n    const createCityTaxi = async (value) => {\n        await CityService.createTaxi(cityId, {city_id: cityId, ...value});\n        await getCity(cityId)\n    };\n    \n    return (\n      <FormUI onSubmit={createCityTaxi}\n              render={({handleSubmit, submitting}) => (\n                <Form onFinish={handleSubmit} layout=\"vertical\">\n                    <div style={{display: \"flex\", flexWrap: \"wrap\", alignItems: \"flex-end\"}}>\n                        <div style={{width: \"calc(100% / 4 - 10px)\", marginRight: 10}}>\n                            <FieldInput label=\"Taxi name\"\n                                        name=\"name\"\n                                        placeholder=\"Enter taxi name\"\n                                        required={true}/>\n                        </div>\n                        <div style={{width: \"calc(100% / 4 - 10px)\", marginRight: 10}}>\n                            <FieldInput label=\"Taxi phone number\"\n                                        name=\"phone_number\"\n                                        placeholder=\"Enter taxi phone\"\n                                        required={true}/>\n                        </div>\n                    </div>\n                    <Button variant=\"primary\" htmlType=\"submit\" disabled={!cityId}>Create</Button>\n                </Form>\n              )}\n      />\n    )\n}\n","/**\n * external libs\n */\nimport {Button, Form} from \"antd\";\nimport React from \"react\";\n/**\n * components\n */\nimport FormUI from \"../../../../../../components/Form\";\nimport FieldInput from \"../../../../../../components/Form/FieldInput\";\n/**\n * services\n */\nimport CityService from \"../../../../../../services/admin/city.service\";\n\nexport default function UpdateCityCabsForm({ city, cityId, getCity }) {\n    const updateCityTaxi = async (value) => {\n        Promise.all(value.cabs.map(cab => CityService.updateTaxi(cityId, cab.id, {\n            city_id: cityId,\n            name: cab.name,\n            phone_number: cab.phone_number,\n            id: cab.id,\n        })))\n        .then(() => getCity(cityId))\n    };\n    \n    return (\n      <FormUI onSubmit={updateCityTaxi}\n              initialValues={{\n                  cabs: city.cabs\n              }}\n              render={({handleSubmit, values}) => (\n                <Form onFinish={handleSubmit} layout=\"vertical\">\n                    {values.cabs.map((cab, index) => (\n                      <div style={{display: \"flex\", flexWrap: \"wrap\", alignItems: \"flex-end\"}}>\n                          <div style={{width: \"calc(100% / 4 - 10px)\", marginRight: 10}}>\n                              <FieldInput label=\"Taxi name\"\n                                          name={`cabs.${index}.name`}\n                                          placeholder=\"Enter taxi name\"\n                                          required={true}/>\n                          </div>\n                          <div style={{width: \"calc(100% / 4 - 10px)\", marginRight: 10}}>\n                              <FieldInput label=\"Taxi phone number\"\n                                          name={`cabs.${index}.phone_number`}\n                                          placeholder=\"Enter taxi phone\"\n                                          required={true}/>\n                          </div>\n                      </div>\n                    ))}\n                    <Button variant=\"primary\" htmlType=\"submit\">Update</Button>\n                </Form>\n              )}\n      />\n    )\n}\n","/**\n * external libs\n */\nimport {Button, Form} from \"antd\";\nimport React from \"react\";\n/**\n * components\n */\nimport FormUI from \"../../../../../../components/Form\";\nimport FieldInput from \"../../../../../../components/Form/FieldInput\";\nimport FieldTextarea from \"../../../../../../components/Form/FieldTextarea\";\n/**\n * services\n */\nimport CityService from \"../../../../../../services/admin/city.service\";\n\nconst languages_list = [\n    {\n        id: 1,\n        lang_code: \"ru\",\n        name: \"Русский\"\n    },\n    {\n        id: 2,\n        lang_code: \"en\",\n        name: \"English\"\n    }\n];\n\nexport default function UpdateCityLanguageForm({cityId, getCity, city}) {\n    const updateCityTranslate = async (value) => {\n        console.log('1')\n        await CityService.updateTranslate(cityId, value.id, {city_id: cityId, ...value});\n        await getCity(cityId)\n    };\n\n    return (\n      <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n          {languages_list.map((lang) => (\n            <FormUI onSubmit={updateCityTranslate}\n                    initialValues={city.languages.reduce((accum, translate) => {\n                        if(translate.language.id === lang.id) {\n                            accum = {\n                                ...accum,\n                                id: translate.id,\n                                city_name: translate.city_name,\n                                city_description: translate.city_description,\n                            }\n                        }\n                        return accum\n                    }, {})}\n                    key={lang.id}\n                    render={({handleSubmit}) => (\n                      <Form onFinish={handleSubmit} layout=\"vertical\"\n                            style={{width: `calc(100% / ${languages_list.length} - 10px)`}}>\n                          <h4>{lang.name} - {lang.lang_code}</h4>\n                          <FieldInput label=\"City name\"\n                                      name=\"city_name\"\n                                      placeholder={`Enter city name (${lang.lang_code})`}\n                                      required={true}/>\n                          <FieldTextarea label=\"City description\"\n                                         name=\"city_description\"\n                                         placeholder={`Enter city description (${lang.lang_code})`}\n                                         required={true}/>\n                          <Button variant=\"primary\" htmlType=\"submit\">Update</Button>\n                      </Form>\n                    )}\n            />\n          ))}\n      </div>\n    )\n}\n","/**\n * external libs\n */\nimport {Button, Form} from \"antd\";\nimport React from \"react\";\n/**\n * components\n */\nimport FieldSelectCountry from \"../../../../../../components/Select/Country\";\nimport FieldInput from \"../../../../../../components/Form/FieldInput\";\nimport UploadFiles from \"../../../../../../components/UploadFiles\";\nimport FormUI from \"../../../../../../components/Form\";\n/**\n * services\n */\nimport CityService from \"../../../../../../services/admin/city.service\";\n\nexport default function UpdateCityForm({cityId, city, getCity}) {\n    const updateCity = async (value) => {\n        const copyValues = JSON.parse(JSON.stringify(value));\n        copyValues.files_ids = (copyValues.images || []).map(({id}) => id);\n        \n        await CityService.update(cityId, copyValues);\n        await getCity(cityId)\n    };\n    \n    return (\n      <FormUI onSubmit={updateCity}\n              initialValues={{\n                  country_id: +city.country.id,\n                  population: city.population,\n                  images: city.images\n              }}\n              render={({handleSubmit, submitting}) => (\n                <Form onFinish={handleSubmit} layout=\"vertical\">\n                    <div style={{display: \"flex\", flexWrap: \"wrap\", alignItems: \"flex-end\"}}>\n                        <div style={{width: \"calc(100% / 4 - 10px)\", marginRight: 10}}>\n                            <FieldSelectCountry name=\"country_id\"\n                                                required={true}\n                                                select={{\n                                                    showSearch: true,\n                                                }}/>\n                        </div>\n                        <div style={{width: \"calc(100% / 4 - 10px)\", marginRight: 10}}>\n                            <FieldInput label=\"Population\"\n                                        name=\"population\"\n                                        type=\"number\"\n                                        placeholder=\"Enter currency code (3 char)\"\n                                        required={true}/>\n                        </div>\n                    </div>\n                    <UploadFiles name=\"images\" fileName=\"images\"/>\n                    <Button variant=\"primary\" htmlType=\"submit\" disabled={submitting}>Update</Button>\n                </Form>\n              )}\n      />\n    )\n}\n","/**\n * external libs\n */\nimport React, {useEffect, useState} from 'react'\nimport {Link, useParams} from 'react-router-dom'\n/**\n * services\n */\nimport CityService from \"../../../../../services/admin/city.service\";\n/**\n * components\n */\nimport CabsCreateForm from '../components/Form/CabsCreate'\nimport CabsUpdateForm from '../components/Form/CabsUpdate'\nimport LanguageUpdateForm from '../components/Form/LanguageUpdate'\nimport CityUpdateForm from '../components/Form/CityUpdate'\n/**\n * constants\n */\nimport {ADMIN_MAKE_SHOW_CITY_URI} from \"../../../../../constants/admin/uri.constant\";\n\n\nexport default function CityCreate() {\n    const [city, setCity] = useState(null)\n    const [isReady, setIsReady] = useState(false);\n    const {cityId} = useParams();\n\n    const getCity = async () => {\n        setIsReady(false);\n        setCity(await CityService.show(cityId));\n        setIsReady(true);\n    };\n\n    useEffect(() => {\n        getCity();\n    }, []);\n\n    if(!isReady) {\n        return <div>Loader...</div>\n    }\n\n    return (\n      <div>\n          <div style={{fontSize: 24, fontWeight: 800, marginBottom: 10}}>\n              <Link to={ADMIN_MAKE_SHOW_CITY_URI(cityId)}> {\"<-\"} Go to view city</Link>\n          </div>\n          <div style={{paddingBottom: 30}}>\n              <CityUpdateForm getCity={getCity} cityId={cityId} city={city}/>\n          </div>\n          {!!city.cabs.length && (\n            <div style={{paddingBottom: 30}}>\n                <CabsUpdateForm getCity={getCity} city={city} cityId={cityId}/>\n            </div>\n          )}\n          {!city.cabs.length && (\n            <div style={{paddingBottom: 30}}>\n                <CabsCreateForm getCity={getCity} cityId={cityId}/>\n            </div>\n          )}\n          <div style={{paddingBottom: 30}}>\n              <LanguageUpdateForm getCity={getCity} cityId={cityId} city={city}/>\n          </div>\n      </div>\n    )\n}\n"],"sourceRoot":""}