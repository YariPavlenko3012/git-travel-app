{"version":3,"sources":["pages/admin/pages/Route/components/Types/index.module.scss","pages/admin/pages/Route/components/Types/index.jsx","pages/admin/pages/Route/index.jsx","../node_modules/deepmerge/dist/cjs.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","enums/ExcursionRouteType.js","services/admin/generationPlace.service.js","utils/GoogleClient.js"],"names":["module","exports","GoogleTypes","setPlaceTypes","placeTypes","dictionary","useContext","DictionaryContext","className","styles","typeWrapper","place_types","google_list","map","type","typeWrapper__type","includes","active","onClick","PlaceTypeTranslate","getTranslateForType","Route","useState","mapBlockRef","useRef","mapRef","useEffect","current","window","google","maps","Map","center","lat","lng","zoom","restriction","latLngBounds","north","east","south","west","strictBounds","GoogleClient","getMarker","SightService","list","city_id","ref","style","width","height","filter","placeType","isMergeableObject","value","isNonNullObject","stringValue","Object","prototype","toString","call","$$typeof","REACT_ELEMENT_TYPE","isReactElement","isSpecial","Symbol","for","cloneUnlessOtherwiseSpecified","options","clone","deepmerge","val","Array","isArray","defaultArrayMerge","target","source","concat","element","getKeys","keys","getOwnPropertySymbols","symbol","propertyIsEnumerable","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","property","_","mergeObject","destination","forEach","key","hasOwnProperty","propertyIsUnsafe","customMerge","getMergeFunction","arrayMerge","sourceIsArray","all","array","Error","reduce","prev","next","deepmerge_1","_toConsumableArray","arr","arrayLikeToArray","iter","iterator","from","unsupportedIterableToArray","TypeError","ExcursionRouteTypeEnum","GenerationPlaceService","data","axios","post","ADMIN_CREATE_SQUARE_GENERATE_PLACE","url","API_ADMIN_SIGHT_DOWNLOAD_IMAGE","ADMIN_CREATE_FINISH_STATUS_BY_CITY_GENERATE_PLACE","params","get","ADMIN_GET_GENERATED_SQUARE_GENERATE_PLACE","paramsSerializer","QueryString","stringify","countryId","API_ADMIN_CITY_LIST","country_id","include","cityList","city","CityModel","i","latitude","longitude","fetch","this","then","res","json","results","geometry","viewport","northeast","southwest","country","photo_ref","Promise","resolve","setTimeout","downloadImage","file","id","photosList","filesIds","shortPhotosList","index","length","photoReference","photo_reference","getPhotoFile","placeId","fields","defaultFields","requestDetailPlace","join","status","result","failed","message","catch","error","currentParams","direction","bounds","LatLngBounds","extend","LatLng","position","icon","props","Marker","color","Rectangle","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","getNorthEast","parseBounds","path","Polyline","geodesic","pinSVGFilled","labelOriginFilled","Point","anchor","scale","labelOrigin","getSouthWest","openingHours","days","formatOpeningHours","undefined","close","day","open","openHour","time","slice","process"],"mappings":"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","file":"static/js/45.9d5f1c51.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"typeWrapper\":\"Types_typeWrapper__dhpk5\",\"typeWrapper__type\":\"Types_typeWrapper__type__bmoD8\",\"active\":\"Types_active__itp0w\"};","/**\n * external libs\n */\nimport React, {useContext} from 'react';\n/**\n * styles\n */\nimport styles from \"./index.module.scss\";\n/**\n * utils\n */\nimport PlaceTypeTranslate from \"../../../../../../utils/PlaceTypeTranslate\";\n/**\n * context\n */\nimport {DictionaryContext} from \"../../../../../context/dictionary.context\";\n\nexport default function GoogleTypes({setPlaceTypes, placeTypes}) {\n    const {dictionary} = useContext(DictionaryContext)\n\n    return (\n        <div className={styles.typeWrapper}>\n            {dictionary.place_types.google_list.map( type => (\n                <div className={`${styles.typeWrapper__type} ${placeTypes.includes(type) && styles.active}`} onClick={() => setPlaceTypes(type)}>\n                    {PlaceTypeTranslate.getTranslateForType(type)}\n                </div>\n            ))}\n        </div>\n    )\n}\n","/**\n * external libs\n */\nimport React, {useEffect, useRef, useState} from 'react';\n/**\n * components\n */\nimport PlaceType from './components/Types'\n/**\n * services\n */\nimport SightService from \"../../../../services/admin/sight.service\";\nimport GoogleClient from \"../../../../utils/GoogleClient\";\n\nexport default function Route() {\n    const [placeTypes, setPlaceTypes] = useState([])\n    const mapBlockRef = useRef(null);\n    const mapRef = useRef(null);\n\n    const mapInit = () => {\n        const opt = {\n            center: {lat: 51.514316, lng: -0.129761},\n            zoom: 4,\n            restriction: {\n                latLngBounds: {\n                    north: 50.590798, //noth lat up\n                    east: 30.825941, //noth lng right\n                    south: 50.213273, //south lat down\n                    west: 30.2394401, //south lng left\n                },\n                strictBounds: true\n            },\n        }\n\n        mapRef.current = new window.google.maps.Map(mapBlockRef.current, opt)\n\n        GoogleClient.getMarker(\n            mapRef.current,\n            {\n                lat: 50.4662711,\n                lng: 30.5134968\n            }\n        )\n    }\n\n    const selectPlaceTypes = ( type ) => {\n        if(placeTypes.includes(type)){\n            return setPlaceTypes(placeTypes.filter( placeType => placeType !== type))\n        }\n\n        setPlaceTypes([...placeTypes, type])\n    }\n\n    const getPlace = () => {\n        SightService.list({\n            city_id: 264\n        })\n    }\n\n\n    useEffect(() => {\n        // getGeometryForCity()\n\n        mapInit()\n        getPlace()\n    }, [])\n\n    return (\n        <div>\n            <div>\n                Get place\n            </div>\n            <div ref={mapBlockRef} style={{width: \"100%\", height: 500}} />\n            <PlaceType setPlaceTypes={selectPlaceTypes} placeTypes={placeTypes}/>\n        </div>\n    )\n}\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn Object.propertyIsEnumerable.call(target, symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default class ExcursionRouteTypeEnum{\n    static get walking(){ return \"walking\" }\n    static get driving(){ return \"driving\" }\n}\n","/**\n *service\n */\nimport axios from 'axios'\n/**\n * const\n */\nimport {\n    ADMIN_CREATE_FINISH_STATUS_BY_CITY_GENERATE_PLACE,\n    ADMIN_CREATE_SQUARE_GENERATE_PLACE,\n    ADMIN_GET_GENERATED_SQUARE_GENERATE_PLACE,\n    API_ADMIN_CITY_LIST,\n    API_ADMIN_SIGHT_DOWNLOAD_IMAGE,\n} from \"../../constants/admin/api.constant\";\nimport {QueryString} from \"../../utils/Querystring\";\nimport CityModel from \"../../model/City/city.model\";\n\n\nexport default class GenerationPlaceService {\n    static async create(data) {\n        return await axios.post(ADMIN_CREATE_SQUARE_GENERATE_PLACE, data);\n    }\n\n    static async downloadImage(url) {\n        return await axios.post(API_ADMIN_SIGHT_DOWNLOAD_IMAGE, {url})\n    }\n\n    static async finish(data) {\n        return await axios.post(ADMIN_CREATE_FINISH_STATUS_BY_CITY_GENERATE_PLACE, data)\n    }\n\n    static async generatedSquare(params) {\n        return await axios.get(ADMIN_GET_GENERATED_SQUARE_GENERATE_PLACE, {\n            params,\n            paramsSerializer: params => {\n                return QueryString.stringify(params)\n            }\n        })\n    }\n\n    static async cityWhiteList({countryId, type, ...params}) {\n        let cityList =  await axios.get(API_ADMIN_CITY_LIST, {\n            params,\n            paramsSerializer: params => {\n                return QueryString.stringify({\n                    ...params,\n                    type: type,\n                    country_id: countryId,\n                    include: ['translation'],\n                })\n            }\n        })\n\n        cityList.data = cityList.data.map(city => new CityModel(city));\n\n        return cityList;\n    }\n}\n\n","import GenerationPlaceService from \"../services/admin/generationPlace.service\";\nimport ExcursionRouteTypeEnum from \"../enums/ExcursionRouteType\";\nimport {QueryString} from \"./Querystring\";\n\nexport default class GoogleClient {\n    static key = process.env.REACT_APP_GEOCODING_API\n\n    static getGeometryForCity(latitude, longitude) {\n        return fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&result_type=locality&key=${this.key}`)\n            .then(res => res.json())\n            .then(city => {\n                if (city.results[0]) {\n                    const {northeast, southwest} = city.results[0].geometry.viewport;\n\n                    return {\n                        north: northeast.lat, //noth lat up\n                        east: northeast.lng, //noth lng right\n                        south: southwest.lat, //south lat down\n                        west: southwest.lng, //south lng left\n                    }\n                }\n\n                return null\n            })\n    }\n\n    static getGeometryForCountry(latitude, longitude) {\n        return fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&result_type=country&key=${this.key}`)\n            .then(res => res.json())\n            .then(country => {\n                if (country.results[0]) {\n                    const {northeast, southwest} = country.results[0].geometry.viewport;\n\n                    return {\n                        north: northeast.lat, //noth lat up\n                        east: northeast.lng, //noth lng right\n                        south: southwest.lat, //south lat down\n                        west: southwest.lng, //south lng left\n                    }\n                }\n\n                return null\n            })\n    }\n\n    static async getPhotoFile (photo_ref){\n        try {\n            await new Promise(resolve => setTimeout(resolve, 400))\n            const file = await GenerationPlaceService.downloadImage(`https://maps.googleapis.com/maps/api/place/photo?maxwidth=600&sensor=false&maxheight=800&photo_reference=${photo_ref}&key=${this.key}`)\n\n            return file?.id ? file : null;\n        } catch (e) {\n            return null\n        }\n    }\n\n    static async getPhotosId( photosList ){\n        let filesIds = [];\n        const shortPhotosList = photosList?.filter((_, index) => index === 0) || [];\n\n        if(!shortPhotosList.length) {\n            return []\n        }\n\n        for (let i = 0; i < shortPhotosList.length; i++) {\n            const photoReference = shortPhotosList[i].photo_reference;\n            const file = await this.getPhotoFile(photoReference)\n\n            if (file.id) {\n                filesIds = [...filesIds, file.id]\n            }\n        }\n\n        return filesIds\n    }\n\n    static getPlaceDetails( placeId, fields, props = {} ){\n        const defaultFields = [\n            'international_phone_number',\n            'opening_hours',\n            'website',\n            'geometry',\n            'type',\n            'photo',\n            'formatted_address',\n            'address_components',\n            'name',\n            'place_id',\n        ]\n\n        const requestDetailPlace = {\n            placeId: placeId,\n            fields: fields || defaultFields\n        };\n\n        return fetch(`https://maps.googleapis.com/maps/api/place/details/json?place_id=${requestDetailPlace.placeId}&fields=${requestDetailPlace.fields.join(\",\")}&key=${this.key}`)\n            .then(res => res.json())\n            .then(res => {\n                if(res.status === \"OK\"){\n                    return res.result;\n                }\n\n                if([\"ZERO_RESULTS\", \"NOT_FOUND\"].includes(res.status)){\n                    return null\n                }\n\n                return {\n                    failed: true,\n                    message: res.status\n                }\n            })\n            .catch( error => ({\n                failed: true,\n                message: error\n            }))\n    }\n\n    static getDirection( params ){\n        const currentParams = {\n            key: this.key,\n            ...params,\n        }\n        const url = `https://maps.googleapis.com/maps/api/directions/json?${QueryString.stringify(currentParams)}`\n\n        return fetch(url)\n            .then(res => res.json())\n            .then(direction => {\n                if(direction.status === \"OK\"){\n                    return direction;\n                }\n\n                if([\"ZERO_RESULTS\", \"NOT_FOUND\"].includes(direction.status)){\n                    return null\n                }\n\n                return {\n                    failed: true,\n                    message: direction.status\n                }\n            })\n            .catch( error => ({\n                failed: true,\n                message: error\n            }))\n    }\n\n    static getBounds(north, south, east, west) {\n        const bounds = new window.google.maps.LatLngBounds();\n\n        bounds.extend(new window.google.maps.LatLng(north, east));\n        bounds.extend(new window.google.maps.LatLng(south, west));\n\n        return bounds;\n    }\n\n    static getMarker(map, position = {}, icon = null, props){\n        return new window.google.maps.Marker({\n            position: position,\n            icon,\n            map,\n            ...props\n        })\n    }\n\n    static getRectangle( map, bounds, color = \"blue\", props = {} ){\n        return new window.google.maps.Rectangle({\n            strokeColor: color,\n            strokeOpacity: 0.8,\n            strokeWeight: 2,\n            fillColor: color,\n            fillOpacity: 0.35,\n            bounds: bounds.getNorthEast ? GoogleClient.parseBounds(bounds) : bounds,\n            map,\n            ...props,\n        });\n    }\n\n    static getPolyline( map, path, props = {} ){\n        return new window.google.maps.Polyline({\n            strokeColor: \"#FF0000\",\n            strokeOpacity: 1.0,\n            strokeWeight: 3,\n            geodesic: true,\n            path,\n            map,\n            ...props,\n        })\n    }\n\n    static generateCustomMarker(color = \"black\") {\n        const pinSVGFilled = \"M 12,2 C 8.1340068,2 5,5.1340068 5,9 c 0,5.25 7,13 7,13 0,0 7,-7.75 7,-13 0,-3.8659932 -3.134007,-7 -7,-7 z\";\n        const labelOriginFilled = new window.google.maps.Point(12, 9);\n\n\n        return {\n            path: pinSVGFilled,\n            anchor: new window.google.maps.Point(12, 17),\n            fillOpacity: 1,\n            fillColor: color,\n            strokeWeight: 2,\n            strokeColor: \"white\",\n            scale: 2,\n            labelOrigin: labelOriginFilled\n        };\n    }\n\n    static parseBounds( bounds ){\n        return {\n            north: bounds.getNorthEast().lat(), //noth lat\n            south: bounds.getSouthWest().lat(), //south lat\n            east: bounds.getNorthEast().lng(), //noth lng\n            west: bounds.getSouthWest().lng() //south lng\n        }\n    }\n\n    static parseOpeningHours( openingHours ){\n        const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\n        let formatOpeningHours = null\n\n        if(openingHours){\n            if(openingHours.length === 1 && openingHours[0].close === undefined){\n                formatOpeningHours = days.reduce((result, day ) => ({\n                    ...result,\n                    [day]: {\n                        open: \"00:00\",\n                        close: \"00:00\"\n                    }\n                }), {})\n\n                return formatOpeningHours\n            }\n\n            formatOpeningHours = openingHours.reduce( (result, openHour) => ({\n                ...result,\n                [days[openHour.open.day]]: {\n                    open: `${openHour.open.time.slice(0, 2)}:${openHour.open.time.slice(2, 4)}`,\n                    close: `${openHour.close.time.slice(0, 2)}:${openHour.close.time.slice(2, 4)}`,\n                }\n            }), {})\n\n            return formatOpeningHours\n        }\n\n        return formatOpeningHours\n    }\n\n}\n"],"sourceRoot":""}